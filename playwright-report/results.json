{
  "config": {
    "configFile": "/home/sam/code/pool_maintainer/playwright.config.ts",
    "rootDir": "/home/sam/code/pool_maintainer/tests/e2e",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 16
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        null
      ],
      [
        "json",
        {
          "outputFile": "playwright-report/results.json"
        }
      ],
      [
        "junit",
        {
          "outputFile": "playwright-report/junit.xml"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/home/sam/code/pool_maintainer/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 16
        },
        "id": "critical-workflows",
        "name": "critical-workflows",
        "testDir": "/home/sam/code/pool_maintainer/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/user-story-test-runner.spec.ts"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/home/sam/code/pool_maintainer/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 16
        },
        "id": "pool-manager-desktop",
        "name": "pool-manager-desktop",
        "testDir": "/home/sam/code/pool_maintainer/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/pool-manager-workflows.spec.ts"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/home/sam/code/pool_maintainer/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 16
        },
        "id": "technician-mobile",
        "name": "technician-mobile",
        "testDir": "/home/sam/code/pool_maintainer/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/technician-workflows.spec.ts"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/home/sam/code/pool_maintainer/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 16
        },
        "id": "emergency-response",
        "name": "emergency-response",
        "testDir": "/home/sam/code/pool_maintainer/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/emergency-response.spec.ts"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/home/sam/code/pool_maintainer/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 16
        },
        "id": "accessibility",
        "name": "accessibility",
        "testDir": "/home/sam/code/pool_maintainer/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/accessibility.spec.ts"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/home/sam/code/pool_maintainer/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 16
        },
        "id": "firefox-critical",
        "name": "firefox-critical",
        "testDir": "/home/sam/code/pool_maintainer/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/pool-manager-workflows.spec.ts",
          "**/emergency-response.spec.ts"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/home/sam/code/pool_maintainer/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 16
        },
        "id": "webkit-critical",
        "name": "webkit-critical",
        "testDir": "/home/sam/code/pool_maintainer/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/pool-manager-workflows.spec.ts"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/home/sam/code/pool_maintainer/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 16
        },
        "id": "mobile-chrome",
        "name": "mobile-chrome",
        "testDir": "/home/sam/code/pool_maintainer/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/technician-workflows.spec.ts"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/home/sam/code/pool_maintainer/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 16
        },
        "id": "mobile-safari",
        "name": "mobile-safari",
        "testDir": "/home/sam/code/pool_maintainer/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/technician-workflows.spec.ts"
        ],
        "timeout": 60000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.54.1",
    "workers": 16,
    "webServer": {
      "command": "bun run dev",
      "url": "http://localhost:5080",
      "reuseExistingServer": true,
      "timeout": 120000
    }
  },
  "suites": [
    {
      "title": "user-story-test-runner.spec.ts",
      "file": "user-story-test-runner.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Critical Path User Story Execution",
          "file": "user-story-test-runner.spec.ts",
          "line": 155,
          "column": 6,
          "specs": [
            {
              "title": "Critical Path: Complete Pool Manager Day",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "critical-workflows",
                  "projectName": "critical-workflows",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 12269,
                      "error": {
                        "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"record-chemical-test\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"record-chemical-test\"]')\u001b[22m\n\n    at executeStep (/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:73:18)\n    at executeScenarioWorkflow (/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:35:13)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:195:22",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                          "column": 18,
                          "line": 73
                        },
                        "snippet": "  71 |       \n  72 |     case 'click':\n> 73 |       await page.click(step.target)\n     |                  ^\n  74 |       break\n  75 |       \n  76 |     case 'type':"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                            "column": 18,
                            "line": 73
                          },
                          "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"record-chemical-test\"]')\u001b[22m\n\n\n  71 |       \n  72 |     case 'click':\n> 73 |       await page.click(step.target)\n     |                  ^\n  74 |       break\n  75 |       \n  76 |     case 'type':\n    at executeStep (/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:73:18)\n    at executeScenarioWorkflow (/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:35:13)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:195:22"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n🎬 Executing: Morning Chemical Test Routine\n"
                        },
                        {
                          "text": "👤 User Type: pool_manager\n"
                        },
                        {
                          "text": "⚡ Priority: critical\n"
                        },
                        {
                          "text": "⏱️ Duration: 5-10 minutes\n"
                        },
                        {
                          "text": "  📝 Step 1/11: navigate /pool-facilities\n"
                        },
                        {
                          "text": "  📝 Step 2/11: click [data-testid=\"record-chemical-test\"]\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "❌ Scenario failed after 10326ms: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"record-chemical-test\"]')\u001b[22m\n\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.264Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cri-2e58a-h-Complete-Pool-Manager-Day-critical-workflows/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cri-2e58a-h-Complete-Pool-Manager-Day-critical-workflows/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cri-2e58a-h-Complete-Pool-Manager-Day-critical-workflows/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                        "column": 18,
                        "line": 73
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "69ff078aab429c088ef4-b1e307447aaa4596be22",
              "file": "user-story-test-runner.spec.ts",
              "line": 184,
              "column": 3
            },
            {
              "title": "Field Technician Complete Route",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "critical-workflows",
                  "projectName": "critical-workflows",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 12437,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n    at executeStep (/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:77:18)\n    at executeScenarioWorkflow (/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:35:13)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:220:22",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                          "column": 18,
                          "line": 77
                        },
                        "snippet": "  75 |       \n  76 |     case 'type':\n> 77 |       await page.fill(step.target, step.input)\n     |                  ^\n  78 |       break\n  79 |       \n  80 |     case 'select':"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                            "column": 18,
                            "line": 77
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n\n  75 |       \n  76 |     case 'type':\n> 77 |       await page.fill(step.target, step.input)\n     |                  ^\n  78 |       break\n  79 |       \n  80 |     case 'select':\n    at executeStep (/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:77:18)\n    at executeScenarioWorkflow (/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:35:13)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:220:22"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n🎬 Executing: Field Chemical Testing with Mobile Device\n"
                        },
                        {
                          "text": "👤 User Type: technician\n"
                        },
                        {
                          "text": "⚡ Priority: high\n"
                        },
                        {
                          "text": "⏱️ Duration: 3-7 minutes\n"
                        },
                        {
                          "text": "  📝 Step 1/10: navigate /mobile/test-entry\n"
                        },
                        {
                          "text": "  📝 Step 2/10: scan [data-testid=\"pool-qr-scanner\"]\n"
                        },
                        {
                          "text": "  📝 Step 3/10: type [data-testid=\"ph-input\"]\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "❌ Scenario failed after 10526ms: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.314Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cri-fce98-d-Technician-Complete-Route-critical-workflows/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cri-fce98-d-Technician-Complete-Route-critical-workflows/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cri-fce98-d-Technician-Complete-Route-critical-workflows/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                        "column": 18,
                        "line": 77
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "69ff078aab429c088ef4-1076b0cb9a45044aef62",
              "file": "user-story-test-runner.spec.ts",
              "line": 210,
              "column": 3
            },
            {
              "title": "Emergency Response Simulation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "critical-workflows",
                  "projectName": "critical-workflows",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 12119,
                      "error": {
                        "message": "TimeoutError: page.selectOption: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"incident-type\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.selectOption: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"incident-type\"]')\u001b[22m\n\n    at executeStep (/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:82:20)\n    at executeScenarioWorkflow (/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:35:13)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:235:22",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                          "column": 20,
                          "line": 82
                        },
                        "snippet": "  80 |     case 'select':\n  81 |       if (typeof step.input === 'string') {\n> 82 |         await page.selectOption(step.target, step.input)\n     |                    ^\n  83 |       } else {\n  84 |         await page.selectOption(step.target, step.input)\n  85 |       }"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                            "column": 20,
                            "line": 82
                          },
                          "message": "TimeoutError: page.selectOption: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"incident-type\"]')\u001b[22m\n\n\n  80 |     case 'select':\n  81 |       if (typeof step.input === 'string') {\n> 82 |         await page.selectOption(step.target, step.input)\n     |                    ^\n  83 |       } else {\n  84 |         await page.selectOption(step.target, step.input)\n  85 |       }\n    at executeStep (/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:82:20)\n    at executeScenarioWorkflow (/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:35:13)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:235:22"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n🎬 Executing: Chemical Spill Emergency Response\n"
                        },
                        {
                          "text": "👤 User Type: emergency_responder\n"
                        },
                        {
                          "text": "⚡ Priority: critical\n"
                        },
                        {
                          "text": "⏱️ Duration: 1-3 minutes\n"
                        },
                        {
                          "text": "  📝 Step 1/8: navigate /emergency/incident\n"
                        },
                        {
                          "text": "  📝 Step 2/8: select [data-testid=\"incident-type\"]\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "❌ Scenario failed after 10290ms: page.selectOption: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"incident-type\"]')\u001b[22m\n\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.140Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cri-a5e97-ergency-Response-Simulation-critical-workflows/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cri-a5e97-ergency-Response-Simulation-critical-workflows/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cri-a5e97-ergency-Response-Simulation-critical-workflows/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                        "column": 20,
                        "line": 82
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "69ff078aab429c088ef4-53e3d40bfc609ffeb1f4",
              "file": "user-story-test-runner.spec.ts",
              "line": 225,
              "column": 3
            }
          ]
        },
        {
          "title": "User Type Workflow Validation",
          "file": "user-story-test-runner.spec.ts",
          "line": 244,
          "column": 6,
          "specs": [
            {
              "title": "poolManager workflow suite",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "critical-workflows",
                  "projectName": "critical-workflows",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 409,
                      "error": {
                        "message": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:248:18",
                        "location": {
                          "file": "<anonymous>",
                          "column": 16,
                          "line": 293
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "<anonymous>",
                            "column": 16,
                            "line": 293
                          },
                          "message": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:248:18"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.246Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-89b3b--poolManager-workflow-suite-critical-workflows/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-89b3b--poolManager-workflow-suite-critical-workflows/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "<anonymous>",
                        "column": 16,
                        "line": 293
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "69ff078aab429c088ef4-44d10e0749c536340fff",
              "file": "user-story-test-runner.spec.ts",
              "line": 246,
              "column": 5
            },
            {
              "title": "technician workflow suite",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "critical-workflows",
                  "projectName": "critical-workflows",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 473,
                      "error": {
                        "message": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:248:18",
                        "location": {
                          "file": "<anonymous>",
                          "column": 16,
                          "line": 293
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "<anonymous>",
                            "column": 16,
                            "line": 293
                          },
                          "message": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:248:18"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.249Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-be112-n-technician-workflow-suite-critical-workflows/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-be112-n-technician-workflow-suite-critical-workflows/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "<anonymous>",
                        "column": 16,
                        "line": 293
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "69ff078aab429c088ef4-e4b4b022a98f8d9a41ed",
              "file": "user-story-test-runner.spec.ts",
              "line": 246,
              "column": 5
            },
            {
              "title": "supervisor workflow suite",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "critical-workflows",
                  "projectName": "critical-workflows",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 458,
                      "error": {
                        "message": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:248:18",
                        "location": {
                          "file": "<anonymous>",
                          "column": 16,
                          "line": 293
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "<anonymous>",
                            "column": 16,
                            "line": 293
                          },
                          "message": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:248:18"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.226Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-c6b42-n-supervisor-workflow-suite-critical-workflows/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-c6b42-n-supervisor-workflow-suite-critical-workflows/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "<anonymous>",
                        "column": 16,
                        "line": 293
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "69ff078aab429c088ef4-e7507fd78a3cd6370d9a",
              "file": "user-story-test-runner.spec.ts",
              "line": 246,
              "column": 5
            },
            {
              "title": "emergency workflow suite",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "critical-workflows",
                  "projectName": "critical-workflows",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 442,
                      "error": {
                        "message": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:248:18",
                        "location": {
                          "file": "<anonymous>",
                          "column": 16,
                          "line": 293
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "<anonymous>",
                            "column": 16,
                            "line": 293
                          },
                          "message": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:248:18"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.317Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-07840-on-emergency-workflow-suite-critical-workflows/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-07840-on-emergency-workflow-suite-critical-workflows/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "<anonymous>",
                        "column": 16,
                        "line": 293
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "69ff078aab429c088ef4-d71ba50a2611d8f76998",
              "file": "user-story-test-runner.spec.ts",
              "line": 246,
              "column": 5
            },
            {
              "title": "accessibility workflow suite",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "critical-workflows",
                  "projectName": "critical-workflows",
                  "results": [
                    {
                      "workerIndex": 7,
                      "parallelIndex": 7,
                      "status": "failed",
                      "duration": 461,
                      "error": {
                        "message": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:248:18",
                        "location": {
                          "file": "<anonymous>",
                          "column": 16,
                          "line": 293
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "<anonymous>",
                            "column": 16,
                            "line": 293
                          },
                          "message": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:248:18"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.228Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-33d84-ccessibility-workflow-suite-critical-workflows/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-33d84-ccessibility-workflow-suite-critical-workflows/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "<anonymous>",
                        "column": 16,
                        "line": 293
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "69ff078aab429c088ef4-abb0319524af5d4f29bc",
              "file": "user-story-test-runner.spec.ts",
              "line": 246,
              "column": 5
            },
            {
              "title": "performance workflow suite",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "critical-workflows",
                  "projectName": "critical-workflows",
                  "results": [
                    {
                      "workerIndex": 8,
                      "parallelIndex": 8,
                      "status": "failed",
                      "duration": 408,
                      "error": {
                        "message": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:248:18",
                        "location": {
                          "file": "<anonymous>",
                          "column": 16,
                          "line": 293
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "<anonymous>",
                            "column": 16,
                            "line": 293
                          },
                          "message": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:248:18"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.263Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-988dd--performance-workflow-suite-critical-workflows/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-988dd--performance-workflow-suite-critical-workflows/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "<anonymous>",
                        "column": 16,
                        "line": 293
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "69ff078aab429c088ef4-a22f3a334d3221ae651e",
              "file": "user-story-test-runner.spec.ts",
              "line": 246,
              "column": 5
            }
          ]
        },
        {
          "title": "Cross-Scenario Integration Testing",
          "file": "user-story-test-runner.spec.ts",
          "line": 267,
          "column": 6,
          "specs": [
            {
              "title": "Multi-user pool incident simulation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "critical-workflows",
                  "projectName": "critical-workflows",
                  "results": [
                    {
                      "workerIndex": 9,
                      "parallelIndex": 9,
                      "status": "failed",
                      "duration": 13421,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:289:26",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                          "column": 26,
                          "line": 289
                        },
                        "snippet": "  287 |     // Technician discovers chemical issue\n  288 |     await technicianPage.goto('/mobile/test-entry')\n> 289 |     await technicianPage.fill('[data-testid=\"ph-input\"]', '6.8') // Low pH\n      |                          ^\n  290 |     await technicianPage.fill('[data-testid=\"chlorine-input\"]', '0.5') // Low chlorine\n  291 |     await technicianPage.click('[data-testid=\"submit-test\"]')\n  292 |     "
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                            "column": 26,
                            "line": 289
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n\n  287 |     // Technician discovers chemical issue\n  288 |     await technicianPage.goto('/mobile/test-entry')\n> 289 |     await technicianPage.fill('[data-testid=\"ph-input\"]', '6.8') // Low pH\n      |                          ^\n  290 |     await technicianPage.fill('[data-testid=\"chlorine-input\"]', '0.5') // Low chlorine\n  291 |     await technicianPage.click('[data-testid=\"submit-test\"]')\n  292 |     \n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:289:26"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.145Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cro-6308f-er-pool-incident-simulation-critical-workflows/test-failed-3.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cro-6308f-er-pool-incident-simulation-critical-workflows/test-failed-2.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cro-6308f-er-pool-incident-simulation-critical-workflows/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cro-6308f-er-pool-incident-simulation-critical-workflows/video.webm"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cro-6308f-er-pool-incident-simulation-critical-workflows/video-2.webm"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cro-6308f-er-pool-incident-simulation-critical-workflows/video-1.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                        "column": 26,
                        "line": 289
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "69ff078aab429c088ef4-284cf9a6bd356dfbb4f8",
              "file": "user-story-test-runner.spec.ts",
              "line": 268,
              "column": 3
            },
            {
              "title": "Offline-to-online data synchronization",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "critical-workflows",
                  "projectName": "critical-workflows",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 10,
                      "status": "failed",
                      "duration": 796,
                      "error": {
                        "message": "TypeError: page.setOffline is not a function",
                        "stack": "TypeError: page.setOffline is not a function\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:312:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                          "column": 16,
                          "line": 312
                        },
                        "snippet": "  310 |     \n  311 |     // Go offline\n> 312 |     await page.setOffline(true)\n      |                ^\n  313 |     \n  314 |     // Enter multiple tests while offline\n  315 |     const offlineTests = ["
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                            "column": 16,
                            "line": 312
                          },
                          "message": "TypeError: page.setOffline is not a function\n\n  310 |     \n  311 |     // Go offline\n> 312 |     await page.setOffline(true)\n      |                ^\n  313 |     \n  314 |     // Enter multiple tests while offline\n  315 |     const offlineTests = [\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:312:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.626Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cro-39862-online-data-synchronization-critical-workflows/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cro-39862-online-data-synchronization-critical-workflows/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Cro-39862-online-data-synchronization-critical-workflows/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                        "column": 16,
                        "line": 312
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "69ff078aab429c088ef4-927f14519cf76211364a",
              "file": "user-story-test-runner.spec.ts",
              "line": 308,
              "column": 3
            }
          ]
        },
        {
          "title": "Performance and Load Testing",
          "file": "user-story-test-runner.spec.ts",
          "line": 349,
          "column": 6,
          "specs": [
            {
              "title": "High-frequency user interaction simulation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "critical-workflows",
                  "projectName": "critical-workflows",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 11,
                      "status": "failed",
                      "duration": 11321,
                      "error": {
                        "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"refresh-data\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"refresh-data\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:357:18",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                          "column": 18,
                          "line": 357
                        },
                        "snippet": "  355 |     // Simulate rapid user interactions\n  356 |     for (let i = 0; i < 20; i++) {\n> 357 |       await page.click('[data-testid=\"refresh-data\"]')\n      |                  ^\n  358 |       await page.waitForSelector('[data-testid=\"data-updated\"]')\n  359 |       await page.waitForTimeout(50) // 50ms between actions\n  360 |     }"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                            "column": 18,
                            "line": 357
                          },
                          "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"refresh-data\"]')\u001b[22m\n\n\n  355 |     // Simulate rapid user interactions\n  356 |     for (let i = 0; i < 20; i++) {\n> 357 |       await page.click('[data-testid=\"refresh-data\"]')\n      |                  ^\n  358 |       await page.waitForSelector('[data-testid=\"data-updated\"]')\n  359 |       await page.waitForTimeout(50) // 50ms between actions\n  360 |     }\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:357:18"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.192Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Per-23cee-user-interaction-simulation-critical-workflows/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Per-23cee-user-interaction-simulation-critical-workflows/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Per-23cee-user-interaction-simulation-critical-workflows/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                        "column": 18,
                        "line": 357
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "69ff078aab429c088ef4-d32d77d5a2b4219e2019",
              "file": "user-story-test-runner.spec.ts",
              "line": 350,
              "column": 3
            },
            {
              "title": "Large dataset rendering performance",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "critical-workflows",
                  "projectName": "critical-workflows",
                  "results": [
                    {
                      "workerIndex": 12,
                      "parallelIndex": 12,
                      "status": "failed",
                      "duration": 485,
                      "error": {
                        "message": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:374:16",
                        "location": {
                          "file": "<anonymous>",
                          "column": 16,
                          "line": 293
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "<anonymous>",
                            "column": 16,
                            "line": 293
                          },
                          "message": "Error: page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:374:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.197Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Per-91beb-taset-rendering-performance-critical-workflows/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Per-91beb-taset-rendering-performance-critical-workflows/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "<anonymous>",
                        "column": 16,
                        "line": 293
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "69ff078aab429c088ef4-189935156c6fac1e2f99",
              "file": "user-story-test-runner.spec.ts",
              "line": 372,
              "column": 3
            }
          ]
        },
        {
          "title": "User Story Validation Report",
          "file": "user-story-test-runner.spec.ts",
          "line": 401,
          "column": 6,
          "specs": [
            {
              "title": "Generate comprehensive user story report",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "critical-workflows",
                  "projectName": "critical-workflows",
                  "results": [
                    {
                      "workerIndex": 13,
                      "parallelIndex": 13,
                      "status": "failed",
                      "duration": 52235,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThanOrEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: >= \u001b[32m80\u001b[39m\nReceived:    \u001b[31m0\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThanOrEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: >= \u001b[32m80\u001b[39m\nReceived:    \u001b[31m0\u001b[39m\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:555:25",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                          "column": 25,
                          "line": 555
                        },
                        "snippet": "  553 |     \n  554 |     // Test should pass if at least 80% of critical scenarios pass\n> 555 |     expect(successRate).toBeGreaterThanOrEqual(80)\n      |                         ^\n  556 |   })\n  557 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                            "column": 25,
                            "line": 555
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThanOrEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: >= \u001b[32m80\u001b[39m\nReceived:    \u001b[31m0\u001b[39m\n\n  553 |     \n  554 |     // Test should pass if at least 80% of critical scenarios pass\n> 555 |     expect(successRate).toBeGreaterThanOrEqual(80)\n      |                         ^\n  556 |   })\n  557 | })\n    at /home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts:555:25"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n🎬 Executing: Morning Chemical Test Routine\n"
                        },
                        {
                          "text": "👤 User Type: pool_manager\n"
                        },
                        {
                          "text": "⚡ Priority: critical\n"
                        },
                        {
                          "text": "⏱️ Duration: 5-10 minutes\n"
                        },
                        {
                          "text": "  📝 Step 1/11: navigate /pool-facilities\n"
                        },
                        {
                          "text": "  📝 Step 2/11: click [data-testid=\"record-chemical-test\"]\n"
                        },
                        {
                          "text": "\n🎬 Executing: Emergency Chemical Alert Response\n"
                        },
                        {
                          "text": "👤 User Type: pool_manager\n"
                        },
                        {
                          "text": "⚡ Priority: critical\n"
                        },
                        {
                          "text": "⏱️ Duration: 2-5 minutes\n"
                        },
                        {
                          "text": "  📝 Step 1/8: navigate /overview\n"
                        },
                        {
                          "text": "  📝 Step 2/8: verify [data-testid=\"critical-alert\"]\n"
                        },
                        {
                          "text": "\n🎬 Executing: Field Chemical Testing with Mobile Device\n"
                        },
                        {
                          "text": "👤 User Type: technician\n"
                        },
                        {
                          "text": "⚡ Priority: high\n"
                        },
                        {
                          "text": "⏱️ Duration: 3-7 minutes\n"
                        },
                        {
                          "text": "  📝 Step 1/10: navigate /mobile/test-entry\n"
                        },
                        {
                          "text": "  📝 Step 2/10: scan [data-testid=\"pool-qr-scanner\"]\n"
                        },
                        {
                          "text": "  📝 Step 3/10: type [data-testid=\"ph-input\"]\n"
                        },
                        {
                          "text": "\n🎬 Executing: Chemical Spill Emergency Response\n"
                        },
                        {
                          "text": "👤 User Type: emergency_responder\n"
                        },
                        {
                          "text": "⚡ Priority: critical\n"
                        },
                        {
                          "text": "⏱️ Duration: 1-3 minutes\n"
                        },
                        {
                          "text": "  📝 Step 1/8: navigate /emergency/incident\n"
                        },
                        {
                          "text": "  📝 Step 2/8: select [data-testid=\"incident-type\"]\n"
                        },
                        {
                          "text": "\n🎬 Executing: Multi-Pool Status Monitoring\n"
                        },
                        {
                          "text": "👤 User Type: supervisor\n"
                        },
                        {
                          "text": "⚡ Priority: high\n"
                        },
                        {
                          "text": "⏱️ Duration: 5-10 minutes\n"
                        },
                        {
                          "text": "  📝 Step 1/8: navigate /supervisor/dashboard\n"
                        },
                        {
                          "text": "  📝 Step 2/8: verify [data-testid=\"pool-status-grid\"]\n"
                        },
                        {
                          "text": "\n🎯 Overall Success Rate: 0%\n"
                        },
                        {
                          "text": "📈 Average Execution Time: 0ms\n"
                        }
                      ],
                      "stderr": [
                        {
                          "text": "❌ Scenario failed after 10510ms: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"record-chemical-test\"]')\u001b[22m\n\n"
                        },
                        {
                          "text": "❌ Scenario failed after 10201ms: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"critical-alert\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"critical-alert\"]')\u001b[22m\n\n"
                        },
                        {
                          "text": "❌ Scenario failed after 10287ms: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n"
                        },
                        {
                          "text": "❌ Scenario failed after 10151ms: page.selectOption: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"incident-type\"]')\u001b[22m\n\n"
                        },
                        {
                          "text": "❌ Scenario failed after 10236ms: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"pool-status-grid\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"pool-status-grid\"]')\u001b[22m\n\n"
                        }
                      ],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.332Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-26f36-rehensive-user-story-report-critical-workflows/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-26f36-rehensive-user-story-report-critical-workflows/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/user-story-test-runner-Use-26f36-rehensive-user-story-report-critical-workflows/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/user-story-test-runner.spec.ts",
                        "column": 25,
                        "line": 555
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "69ff078aab429c088ef4-017d7f60c5564850c4f0",
              "file": "user-story-test-runner.spec.ts",
              "line": 402,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "pool-manager-workflows.spec.ts",
      "file": "pool-manager-workflows.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Pool Manager Daily Workflows",
          "file": "pool-manager-workflows.spec.ts",
          "line": 75,
          "column": 6,
          "specs": [
            {
              "title": "PM-001: Morning Chemical Test Routine",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "pool-manager-desktop",
                  "projectName": "pool-manager-desktop",
                  "results": [
                    {
                      "workerIndex": 14,
                      "parallelIndex": 14,
                      "status": "failed",
                      "duration": 12253,
                      "error": {
                        "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"record-chemical-test\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"record-chemical-test\"]')\u001b[22m\n\n    at executeUserScenario (/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:28:20)\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:90:22",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 20,
                          "line": 28
                        },
                        "snippet": "  26 |         \n  27 |       case 'click':\n> 28 |         await page.click(step.target)\n     |                    ^\n  29 |         break\n  30 |         \n  31 |       case 'type':"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 20,
                            "line": 28
                          },
                          "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"record-chemical-test\"]')\u001b[22m\n\n\n  26 |         \n  27 |       case 'click':\n> 28 |         await page.click(step.target)\n     |                    ^\n  29 |         break\n  30 |         \n  31 |       case 'type':\n    at executeUserScenario (/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:28:20)\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:90:22"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "Executing scenario: Morning Chemical Test Routine\n"
                        },
                        {
                          "text": "Step: navigate on /pool-facilities\n"
                        },
                        {
                          "text": "Step: click on [data-testid=\"record-chemical-test\"]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.200Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-d9cb9-rning-Chemical-Test-Routine-pool-manager-desktop/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-d9cb9-rning-Chemical-Test-Routine-pool-manager-desktop/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-d9cb9-rning-Chemical-Test-Routine-pool-manager-desktop/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 20,
                        "line": 28
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-aad964ae53a7f5d49600",
              "file": "pool-manager-workflows.spec.ts",
              "line": 88,
              "column": 3
            },
            {
              "title": "PM-002: Emergency Chemical Alert Response",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "pool-manager-desktop",
                  "projectName": "pool-manager-desktop",
                  "results": [
                    {
                      "workerIndex": 15,
                      "parallelIndex": 15,
                      "status": "failed",
                      "duration": 12200,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"critical-alert\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"critical-alert\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"critical-alert\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"critical-alert\"]')\u001b[22m\n\n    at executeUserScenario (/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:44:49)\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:131:22",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 49,
                          "line": 44
                        },
                        "snippet": "  42 |         \n  43 |       case 'verify':\n> 44 |         await expect(page.locator(step.target)).toBeVisible()\n     |                                                 ^\n  45 |         break\n  46 |         \n  47 |       case 'keyboard':"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 49,
                            "line": 44
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"critical-alert\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"critical-alert\"]')\u001b[22m\n\n\n  42 |         \n  43 |       case 'verify':\n> 44 |         await expect(page.locator(step.target)).toBeVisible()\n     |                                                 ^\n  45 |         break\n  46 |         \n  47 |       case 'keyboard':\n    at executeUserScenario (/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:44:49)\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:131:22"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "Executing scenario: Emergency Chemical Alert Response\n"
                        },
                        {
                          "text": "Step: navigate on /overview\n"
                        },
                        {
                          "text": "Step: verify on [data-testid=\"critical-alert\"]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:15.565Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-0eab7-ncy-Chemical-Alert-Response-pool-manager-desktop/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-0eab7-ncy-Chemical-Alert-Response-pool-manager-desktop/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-0eab7-ncy-Chemical-Alert-Response-pool-manager-desktop/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 49,
                        "line": 44
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-617d46974e8119e0a803",
              "file": "pool-manager-workflows.spec.ts",
              "line": 114,
              "column": 3
            },
            {
              "title": "PM-003: Weekly Pool Status Review",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "pool-manager-desktop",
                  "projectName": "pool-manager-desktop",
                  "results": [
                    {
                      "workerIndex": 16,
                      "parallelIndex": 12,
                      "status": "failed",
                      "duration": 11127,
                      "error": {
                        "message": "TimeoutError: page.selectOption: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"time-range\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.selectOption: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"time-range\"]')\u001b[22m\n\n    at executeUserScenario (/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:36:20)\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:162:22",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 20,
                          "line": 36
                        },
                        "snippet": "  34 |         \n  35 |       case 'select':\n> 36 |         await page.selectOption(step.target, step.input)\n     |                    ^\n  37 |         break\n  38 |         \n  39 |       case 'wait':"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 20,
                            "line": 36
                          },
                          "message": "TimeoutError: page.selectOption: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"time-range\"]')\u001b[22m\n\n\n  34 |         \n  35 |       case 'select':\n> 36 |         await page.selectOption(step.target, step.input)\n     |                    ^\n  37 |         break\n  38 |         \n  39 |       case 'wait':\n    at executeUserScenario (/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:36:20)\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:162:22"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "Executing scenario: Weekly Pool Status Review\n"
                        },
                        {
                          "text": "Step: navigate on /trends\n"
                        },
                        {
                          "text": "Step: select on [data-testid=\"time-range\"]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:17.182Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-639fa-3-Weekly-Pool-Status-Review-pool-manager-desktop/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-639fa-3-Weekly-Pool-Status-Review-pool-manager-desktop/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-639fa-3-Weekly-Pool-Status-Review-pool-manager-desktop/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 20,
                        "line": 36
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-0acc6d1e4b250f0d6b4c",
              "file": "pool-manager-workflows.spec.ts",
              "line": 144,
              "column": 3
            },
            {
              "title": "Multi-pool dashboard overview",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "pool-manager-desktop",
                  "projectName": "pool-manager-desktop",
                  "results": [
                    {
                      "workerIndex": 18,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 11267,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"pool-card-pool-001\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"pool-card-pool-001\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"pool-card-pool-001\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"pool-card-pool-001\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:212:70",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 70,
                          "line": 212
                        },
                        "snippet": "  210 |\n  211 |     // Verify all pools are displayed\n> 212 |     await expect(page.locator('[data-testid=\"pool-card-pool-001\"]')).toBeVisible()\n      |                                                                      ^\n  213 |     await expect(page.locator('[data-testid=\"pool-card-pool-002\"]')).toBeVisible()\n  214 |     await expect(page.locator('[data-testid=\"pool-card-pool-003\"]')).toBeVisible()\n  215 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 70,
                            "line": 212
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"pool-card-pool-001\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"pool-card-pool-001\"]')\u001b[22m\n\n\n  210 |\n  211 |     // Verify all pools are displayed\n> 212 |     await expect(page.locator('[data-testid=\"pool-card-pool-001\"]')).toBeVisible()\n      |                                                                      ^\n  213 |     await expect(page.locator('[data-testid=\"pool-card-pool-002\"]')).toBeVisible()\n  214 |     await expect(page.locator('[data-testid=\"pool-card-pool-003\"]')).toBeVisible()\n  215 |\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:212:70"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:17.275Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-30bea-lti-pool-dashboard-overview-pool-manager-desktop/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-30bea-lti-pool-dashboard-overview-pool-manager-desktop/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-30bea-lti-pool-dashboard-overview-pool-manager-desktop/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 70,
                        "line": 212
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-460ef4a20d032f4d7b34",
              "file": "pool-manager-workflows.spec.ts",
              "line": 178,
              "column": 3
            },
            {
              "title": "Real-time alert notifications",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "pool-manager-desktop",
                  "projectName": "pool-manager-desktop",
                  "results": [
                    {
                      "workerIndex": 17,
                      "parallelIndex": 7,
                      "status": "failed",
                      "duration": 11317,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"alert-notification\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"alert-notification\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"alert-notification\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"alert-notification\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:253:70",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 70,
                          "line": 253
                        },
                        "snippet": "  251 |\n  252 |     // Verify alert notification appears\n> 253 |     await expect(page.locator('[data-testid=\"alert-notification\"]')).toBeVisible()\n      |                                                                      ^\n  254 |     await expect(page.locator('[data-testid=\"alert-message\"]')).toContainText('pH level approaching upper limit')\n  255 |\n  256 |     // Verify alert can be acknowledged"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 70,
                            "line": 253
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"alert-notification\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"alert-notification\"]')\u001b[22m\n\n\n  251 |\n  252 |     // Verify alert notification appears\n> 253 |     await expect(page.locator('[data-testid=\"alert-notification\"]')).toBeVisible()\n      |                                                                      ^\n  254 |     await expect(page.locator('[data-testid=\"alert-message\"]')).toContainText('pH level approaching upper limit')\n  255 |\n  256 |     // Verify alert can be acknowledged\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:253:70"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:17.280Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-b76f4-al-time-alert-notifications-pool-manager-desktop/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-b76f4-al-time-alert-notifications-pool-manager-desktop/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-b76f4-al-time-alert-notifications-pool-manager-desktop/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 70,
                        "line": 253
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-df463794ab2398b4d2cd",
              "file": "pool-manager-workflows.spec.ts",
              "line": 233,
              "column": 3
            },
            {
              "title": "Offline functionality and data sync",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "pool-manager-desktop",
                  "projectName": "pool-manager-desktop",
                  "results": [
                    {
                      "workerIndex": 19,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 11227,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:269:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 16,
                          "line": 269
                        },
                        "snippet": "  267 |\n  268 |     // Test online chemical test submission\n> 269 |     await page.fill('[data-testid=\"ph-input\"]', '7.4')\n      |                ^\n  270 |     await page.fill('[data-testid=\"chlorine-input\"]', '2.0')\n  271 |     await page.fill('[data-testid=\"alkalinity-input\"]', '100')\n  272 |     await page.fill('[data-testid=\"temperature-input\"]', '80')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 16,
                            "line": 269
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n\n  267 |\n  268 |     // Test online chemical test submission\n> 269 |     await page.fill('[data-testid=\"ph-input\"]', '7.4')\n      |                ^\n  270 |     await page.fill('[data-testid=\"chlorine-input\"]', '2.0')\n  271 |     await page.fill('[data-testid=\"alkalinity-input\"]', '100')\n  272 |     await page.fill('[data-testid=\"temperature-input\"]', '80')\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:269:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:17.296Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-7d193-functionality-and-data-sync-pool-manager-desktop/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-7d193-functionality-and-data-sync-pool-manager-desktop/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-7d193-functionality-and-data-sync-pool-manager-desktop/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 16,
                        "line": 269
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-9026c21ee2b60d049a26",
              "file": "pool-manager-workflows.spec.ts",
              "line": 265,
              "column": 3
            },
            {
              "title": "Performance under load simulation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "pool-manager-desktop",
                  "projectName": "pool-manager-desktop",
                  "results": [
                    {
                      "workerIndex": 21,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 10960,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"pool-status-dashboard\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"pool-status-dashboard\"]') to be visible\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:307:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 16,
                          "line": 307
                        },
                        "snippet": "  305 |     // Measure initial load time\n  306 |     const startTime = Date.now()\n> 307 |     await page.waitForSelector('[data-testid=\"pool-status-dashboard\"]')\n      |                ^\n  308 |     const loadTime = Date.now() - startTime\n  309 |     \n  310 |     expect(loadTime).toBeLessThan(3000) // Should load within 3 seconds"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 16,
                            "line": 307
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"pool-status-dashboard\"]') to be visible\u001b[22m\n\n\n  305 |     // Measure initial load time\n  306 |     const startTime = Date.now()\n> 307 |     await page.waitForSelector('[data-testid=\"pool-status-dashboard\"]')\n      |                ^\n  308 |     const loadTime = Date.now() - startTime\n  309 |     \n  310 |     expect(loadTime).toBeLessThan(3000) // Should load within 3 seconds\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:307:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:17.278Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-2af46-mance-under-load-simulation-pool-manager-desktop/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-2af46-mance-under-load-simulation-pool-manager-desktop/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-2af46-mance-under-load-simulation-pool-manager-desktop/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 16,
                        "line": 307
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-7fdbd7a2165c637d29d9",
              "file": "pool-manager-workflows.spec.ts",
              "line": 301,
              "column": 3
            },
            {
              "title": "PM-001: Morning Chemical Test Routine",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 63,
                      "parallelIndex": 10,
                      "status": "failed",
                      "duration": 32841,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:78:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 16,
                          "line": 78
                        },
                        "snippet": "  76 |   test.beforeEach(async ({ page }) => {\n  77 |     // Setup: Mock user authentication and initial app state\n> 78 |     await page.goto('/')\n     |                ^\n  79 |     \n  80 |     // Mock authentication state\n  81 |     await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 16,
                            "line": 78
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n\n  76 |   test.beforeEach(async ({ page }) => {\n  77 |     // Setup: Mock user authentication and initial app state\n> 78 |     await page.goto('/')\n     |                ^\n  79 |     \n  80 |     // Mock authentication state\n  81 |     await page.evaluate(() => {\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:78:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:44.197Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-d9cb9-rning-Chemical-Test-Routine-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-d9cb9-rning-Chemical-Test-Routine-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-d9cb9-rning-Chemical-Test-Routine-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 16,
                        "line": 78
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-8d95496594d59a56336b",
              "file": "pool-manager-workflows.spec.ts",
              "line": 88,
              "column": 3
            },
            {
              "title": "PM-002: Emergency Chemical Alert Response",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 64,
                      "parallelIndex": 15,
                      "status": "failed",
                      "duration": 32723,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:78:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 16,
                          "line": 78
                        },
                        "snippet": "  76 |   test.beforeEach(async ({ page }) => {\n  77 |     // Setup: Mock user authentication and initial app state\n> 78 |     await page.goto('/')\n     |                ^\n  79 |     \n  80 |     // Mock authentication state\n  81 |     await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 16,
                            "line": 78
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n\n  76 |   test.beforeEach(async ({ page }) => {\n  77 |     // Setup: Mock user authentication and initial app state\n> 78 |     await page.goto('/')\n     |                ^\n  79 |     \n  80 |     // Mock authentication state\n  81 |     await page.evaluate(() => {\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:78:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:44.457Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-0eab7-ncy-Chemical-Alert-Response-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-0eab7-ncy-Chemical-Alert-Response-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-0eab7-ncy-Chemical-Alert-Response-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 16,
                        "line": 78
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-134518718e77390c1cca",
              "file": "pool-manager-workflows.spec.ts",
              "line": 114,
              "column": 3
            },
            {
              "title": "PM-003: Weekly Pool Status Review",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 65,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 31638,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:78:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 16,
                          "line": 78
                        },
                        "snippet": "  76 |   test.beforeEach(async ({ page }) => {\n  77 |     // Setup: Mock user authentication and initial app state\n> 78 |     await page.goto('/')\n     |                ^\n  79 |     \n  80 |     // Mock authentication state\n  81 |     await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 16,
                            "line": 78
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n\n  76 |   test.beforeEach(async ({ page }) => {\n  77 |     // Setup: Mock user authentication and initial app state\n> 78 |     await page.goto('/')\n     |                ^\n  79 |     \n  80 |     // Mock authentication state\n  81 |     await page.evaluate(() => {\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:78:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:44.595Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-639fa-3-Weekly-Pool-Status-Review-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-639fa-3-Weekly-Pool-Status-Review-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-639fa-3-Weekly-Pool-Status-Review-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 16,
                        "line": 78
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-af1e02db60271a211714",
              "file": "pool-manager-workflows.spec.ts",
              "line": 144,
              "column": 3
            },
            {
              "title": "Multi-pool dashboard overview",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 66,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 32747,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:78:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 16,
                          "line": 78
                        },
                        "snippet": "  76 |   test.beforeEach(async ({ page }) => {\n  77 |     // Setup: Mock user authentication and initial app state\n> 78 |     await page.goto('/')\n     |                ^\n  79 |     \n  80 |     // Mock authentication state\n  81 |     await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 16,
                            "line": 78
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n\n  76 |   test.beforeEach(async ({ page }) => {\n  77 |     // Setup: Mock user authentication and initial app state\n> 78 |     await page.goto('/')\n     |                ^\n  79 |     \n  80 |     // Mock authentication state\n  81 |     await page.evaluate(() => {\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:78:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:44.818Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-30bea-lti-pool-dashboard-overview-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-30bea-lti-pool-dashboard-overview-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-30bea-lti-pool-dashboard-overview-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 16,
                        "line": 78
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-f895d6e15374575d825a",
              "file": "pool-manager-workflows.spec.ts",
              "line": 178,
              "column": 3
            },
            {
              "title": "Real-time alert notifications",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 67,
                      "parallelIndex": 8,
                      "status": "failed",
                      "duration": 32389,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:78:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 16,
                          "line": 78
                        },
                        "snippet": "  76 |   test.beforeEach(async ({ page }) => {\n  77 |     // Setup: Mock user authentication and initial app state\n> 78 |     await page.goto('/')\n     |                ^\n  79 |     \n  80 |     // Mock authentication state\n  81 |     await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 16,
                            "line": 78
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n\n  76 |   test.beforeEach(async ({ page }) => {\n  77 |     // Setup: Mock user authentication and initial app state\n> 78 |     await page.goto('/')\n     |                ^\n  79 |     \n  80 |     // Mock authentication state\n  81 |     await page.evaluate(() => {\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:78:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:44.925Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-b76f4-al-time-alert-notifications-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-b76f4-al-time-alert-notifications-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-b76f4-al-time-alert-notifications-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 16,
                        "line": 78
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-aec1e5d80e8199199b5d",
              "file": "pool-manager-workflows.spec.ts",
              "line": 233,
              "column": 3
            },
            {
              "title": "Offline functionality and data sync",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 68,
                      "parallelIndex": 12,
                      "status": "failed",
                      "duration": 32304,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:78:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 16,
                          "line": 78
                        },
                        "snippet": "  76 |   test.beforeEach(async ({ page }) => {\n  77 |     // Setup: Mock user authentication and initial app state\n> 78 |     await page.goto('/')\n     |                ^\n  79 |     \n  80 |     // Mock authentication state\n  81 |     await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 16,
                            "line": 78
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n\n  76 |   test.beforeEach(async ({ page }) => {\n  77 |     // Setup: Mock user authentication and initial app state\n> 78 |     await page.goto('/')\n     |                ^\n  79 |     \n  80 |     // Mock authentication state\n  81 |     await page.evaluate(() => {\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:78:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:44.869Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-7d193-functionality-and-data-sync-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-7d193-functionality-and-data-sync-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-7d193-functionality-and-data-sync-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 16,
                        "line": 78
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-2a47b701bb597eb714ba",
              "file": "pool-manager-workflows.spec.ts",
              "line": 265,
              "column": 3
            },
            {
              "title": "Performance under load simulation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 69,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 32376,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:78:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 16,
                          "line": 78
                        },
                        "snippet": "  76 |   test.beforeEach(async ({ page }) => {\n  77 |     // Setup: Mock user authentication and initial app state\n> 78 |     await page.goto('/')\n     |                ^\n  79 |     \n  80 |     // Mock authentication state\n  81 |     await page.evaluate(() => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 16,
                            "line": 78
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n\n  76 |   test.beforeEach(async ({ page }) => {\n  77 |     // Setup: Mock user authentication and initial app state\n> 78 |     await page.goto('/')\n     |                ^\n  79 |     \n  80 |     // Mock authentication state\n  81 |     await page.evaluate(() => {\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:78:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:44.965Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-2af46-mance-under-load-simulation-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-2af46-mance-under-load-simulation-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-2af46-mance-under-load-simulation-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 16,
                        "line": 78
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-9f002a24a6dd0f8e57e8",
              "file": "pool-manager-workflows.spec.ts",
              "line": 301,
              "column": 3
            },
            {
              "title": "PM-001: Morning Chemical Test Routine",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit-critical",
                  "projectName": "webkit-critical",
                  "results": [
                    {
                      "workerIndex": 71,
                      "parallelIndex": 7,
                      "status": "failed",
                      "duration": 12254,
                      "error": {
                        "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"record-chemical-test\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"record-chemical-test\"]')\u001b[22m\n\n    at executeUserScenario (/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:28:20)\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:90:22",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 20,
                          "line": 28
                        },
                        "snippet": "  26 |         \n  27 |       case 'click':\n> 28 |         await page.click(step.target)\n     |                    ^\n  29 |         break\n  30 |         \n  31 |       case 'type':"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 20,
                            "line": 28
                          },
                          "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"record-chemical-test\"]')\u001b[22m\n\n\n  26 |         \n  27 |       case 'click':\n> 28 |         await page.click(step.target)\n     |                    ^\n  29 |         break\n  30 |         \n  31 |       case 'type':\n    at executeUserScenario (/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:28:20)\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:90:22"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "Executing scenario: Morning Chemical Test Routine\n"
                        },
                        {
                          "text": "Step: navigate on /pool-facilities\n"
                        },
                        {
                          "text": "Step: click on [data-testid=\"record-chemical-test\"]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:18.108Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-d9cb9-rning-Chemical-Test-Routine-webkit-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-d9cb9-rning-Chemical-Test-Routine-webkit-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-d9cb9-rning-Chemical-Test-Routine-webkit-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 20,
                        "line": 28
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-d43ca007b52479cac249",
              "file": "pool-manager-workflows.spec.ts",
              "line": 88,
              "column": 3
            },
            {
              "title": "PM-002: Emergency Chemical Alert Response",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit-critical",
                  "projectName": "webkit-critical",
                  "results": [
                    {
                      "workerIndex": 72,
                      "parallelIndex": 14,
                      "status": "failed",
                      "duration": 11672,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"critical-alert\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"critical-alert\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"critical-alert\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"critical-alert\"]')\u001b[22m\n\n    at executeUserScenario (/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:44:49)\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:131:22",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 49,
                          "line": 44
                        },
                        "snippet": "  42 |         \n  43 |       case 'verify':\n> 44 |         await expect(page.locator(step.target)).toBeVisible()\n     |                                                 ^\n  45 |         break\n  46 |         \n  47 |       case 'keyboard':"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 49,
                            "line": 44
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"critical-alert\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"critical-alert\"]')\u001b[22m\n\n\n  42 |         \n  43 |       case 'verify':\n> 44 |         await expect(page.locator(step.target)).toBeVisible()\n     |                                                 ^\n  45 |         break\n  46 |         \n  47 |       case 'keyboard':\n    at executeUserScenario (/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:44:49)\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:131:22"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "Executing scenario: Emergency Chemical Alert Response\n"
                        },
                        {
                          "text": "Step: navigate on /overview\n"
                        },
                        {
                          "text": "Step: verify on [data-testid=\"critical-alert\"]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:19.167Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-0eab7-ncy-Chemical-Alert-Response-webkit-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-0eab7-ncy-Chemical-Alert-Response-webkit-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-0eab7-ncy-Chemical-Alert-Response-webkit-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 49,
                        "line": 44
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-2cce2e113398f0aaad2c",
              "file": "pool-manager-workflows.spec.ts",
              "line": 114,
              "column": 3
            },
            {
              "title": "PM-003: Weekly Pool Status Review",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit-critical",
                  "projectName": "webkit-critical",
                  "results": [
                    {
                      "workerIndex": 73,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 11866,
                      "error": {
                        "message": "TimeoutError: page.selectOption: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"time-range\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.selectOption: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"time-range\"]')\u001b[22m\n\n    at executeUserScenario (/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:36:20)\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:162:22",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 20,
                          "line": 36
                        },
                        "snippet": "  34 |         \n  35 |       case 'select':\n> 36 |         await page.selectOption(step.target, step.input)\n     |                    ^\n  37 |         break\n  38 |         \n  39 |       case 'wait':"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 20,
                            "line": 36
                          },
                          "message": "TimeoutError: page.selectOption: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"time-range\"]')\u001b[22m\n\n\n  34 |         \n  35 |       case 'select':\n> 36 |         await page.selectOption(step.target, step.input)\n     |                    ^\n  37 |         break\n  38 |         \n  39 |       case 'wait':\n    at executeUserScenario (/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:36:20)\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:162:22"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "Executing scenario: Weekly Pool Status Review\n"
                        },
                        {
                          "text": "Step: navigate on /trends\n"
                        },
                        {
                          "text": "Step: select on [data-testid=\"time-range\"]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:20.669Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-639fa-3-Weekly-Pool-Status-Review-webkit-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-639fa-3-Weekly-Pool-Status-Review-webkit-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-639fa-3-Weekly-Pool-Status-Review-webkit-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 20,
                        "line": 36
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-4cbd3e4b10fa4597804b",
              "file": "pool-manager-workflows.spec.ts",
              "line": 144,
              "column": 3
            },
            {
              "title": "Multi-pool dashboard overview",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit-critical",
                  "projectName": "webkit-critical",
                  "results": [
                    {
                      "workerIndex": 74,
                      "parallelIndex": 11,
                      "status": "failed",
                      "duration": 11351,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"pool-card-pool-001\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"pool-card-pool-001\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"pool-card-pool-001\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"pool-card-pool-001\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:212:70",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 70,
                          "line": 212
                        },
                        "snippet": "  210 |\n  211 |     // Verify all pools are displayed\n> 212 |     await expect(page.locator('[data-testid=\"pool-card-pool-001\"]')).toBeVisible()\n      |                                                                      ^\n  213 |     await expect(page.locator('[data-testid=\"pool-card-pool-002\"]')).toBeVisible()\n  214 |     await expect(page.locator('[data-testid=\"pool-card-pool-003\"]')).toBeVisible()\n  215 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 70,
                            "line": 212
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"pool-card-pool-001\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"pool-card-pool-001\"]')\u001b[22m\n\n\n  210 |\n  211 |     // Verify all pools are displayed\n> 212 |     await expect(page.locator('[data-testid=\"pool-card-pool-001\"]')).toBeVisible()\n      |                                                                      ^\n  213 |     await expect(page.locator('[data-testid=\"pool-card-pool-002\"]')).toBeVisible()\n  214 |     await expect(page.locator('[data-testid=\"pool-card-pool-003\"]')).toBeVisible()\n  215 |\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:212:70"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:22.636Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-30bea-lti-pool-dashboard-overview-webkit-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-30bea-lti-pool-dashboard-overview-webkit-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-30bea-lti-pool-dashboard-overview-webkit-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 70,
                        "line": 212
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-588be73ea3d0b7b34067",
              "file": "pool-manager-workflows.spec.ts",
              "line": 178,
              "column": 3
            },
            {
              "title": "Real-time alert notifications",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit-critical",
                  "projectName": "webkit-critical",
                  "results": [
                    {
                      "workerIndex": 75,
                      "parallelIndex": 9,
                      "status": "failed",
                      "duration": 11525,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"alert-notification\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"alert-notification\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"alert-notification\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"alert-notification\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:253:70",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 70,
                          "line": 253
                        },
                        "snippet": "  251 |\n  252 |     // Verify alert notification appears\n> 253 |     await expect(page.locator('[data-testid=\"alert-notification\"]')).toBeVisible()\n      |                                                                      ^\n  254 |     await expect(page.locator('[data-testid=\"alert-message\"]')).toContainText('pH level approaching upper limit')\n  255 |\n  256 |     // Verify alert can be acknowledged"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 70,
                            "line": 253
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"alert-notification\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"alert-notification\"]')\u001b[22m\n\n\n  251 |\n  252 |     // Verify alert notification appears\n> 253 |     await expect(page.locator('[data-testid=\"alert-notification\"]')).toBeVisible()\n      |                                                                      ^\n  254 |     await expect(page.locator('[data-testid=\"alert-message\"]')).toContainText('pH level approaching upper limit')\n  255 |\n  256 |     // Verify alert can be acknowledged\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:253:70"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:25.857Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-b76f4-al-time-alert-notifications-webkit-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-b76f4-al-time-alert-notifications-webkit-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-b76f4-al-time-alert-notifications-webkit-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 70,
                        "line": 253
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-a6b8f224250b386dae8e",
              "file": "pool-manager-workflows.spec.ts",
              "line": 233,
              "column": 3
            },
            {
              "title": "Offline functionality and data sync",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit-critical",
                  "projectName": "webkit-critical",
                  "results": [
                    {
                      "workerIndex": 76,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 11867,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:269:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 16,
                          "line": 269
                        },
                        "snippet": "  267 |\n  268 |     // Test online chemical test submission\n> 269 |     await page.fill('[data-testid=\"ph-input\"]', '7.4')\n      |                ^\n  270 |     await page.fill('[data-testid=\"chlorine-input\"]', '2.0')\n  271 |     await page.fill('[data-testid=\"alkalinity-input\"]', '100')\n  272 |     await page.fill('[data-testid=\"temperature-input\"]', '80')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 16,
                            "line": 269
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n\n  267 |\n  268 |     // Test online chemical test submission\n> 269 |     await page.fill('[data-testid=\"ph-input\"]', '7.4')\n      |                ^\n  270 |     await page.fill('[data-testid=\"chlorine-input\"]', '2.0')\n  271 |     await page.fill('[data-testid=\"alkalinity-input\"]', '100')\n  272 |     await page.fill('[data-testid=\"temperature-input\"]', '80')\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:269:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:26.258Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-7d193-functionality-and-data-sync-webkit-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-7d193-functionality-and-data-sync-webkit-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-7d193-functionality-and-data-sync-webkit-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 16,
                        "line": 269
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-411510eab5909c5ff486",
              "file": "pool-manager-workflows.spec.ts",
              "line": 265,
              "column": 3
            },
            {
              "title": "Performance under load simulation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit-critical",
                  "projectName": "webkit-critical",
                  "results": [
                    {
                      "workerIndex": 77,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 11961,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"pool-status-dashboard\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"pool-status-dashboard\"]') to be visible\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:307:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 16,
                          "line": 307
                        },
                        "snippet": "  305 |     // Measure initial load time\n  306 |     const startTime = Date.now()\n> 307 |     await page.waitForSelector('[data-testid=\"pool-status-dashboard\"]')\n      |                ^\n  308 |     const loadTime = Date.now() - startTime\n  309 |     \n  310 |     expect(loadTime).toBeLessThan(3000) // Should load within 3 seconds"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 16,
                            "line": 307
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"pool-status-dashboard\"]') to be visible\u001b[22m\n\n\n  305 |     // Measure initial load time\n  306 |     const startTime = Date.now()\n> 307 |     await page.waitForSelector('[data-testid=\"pool-status-dashboard\"]')\n      |                ^\n  308 |     const loadTime = Date.now() - startTime\n  309 |     \n  310 |     expect(loadTime).toBeLessThan(3000) // Should load within 3 seconds\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:307:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:26.322Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-2af46-mance-under-load-simulation-webkit-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-2af46-mance-under-load-simulation-webkit-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Poo-2af46-mance-under-load-simulation-webkit-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 16,
                        "line": 307
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-4260d8e45909ff3c6143",
              "file": "pool-manager-workflows.spec.ts",
              "line": 301,
              "column": 3
            }
          ]
        },
        {
          "title": "Critical Path Smoke Tests",
          "file": "pool-manager-workflows.spec.ts",
          "line": 342,
          "column": 6,
          "specs": [
            {
              "title": "Essential workflow connectivity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "pool-manager-desktop",
                  "projectName": "pool-manager-desktop",
                  "results": [
                    {
                      "workerIndex": 20,
                      "parallelIndex": 8,
                      "status": "failed",
                      "duration": 10840,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"username\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"username\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:348:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 16,
                          "line": 348
                        },
                        "snippet": "  346 |     // 1. Authentication flow\n  347 |     await page.goto('/login')\n> 348 |     await page.fill('[data-testid=\"username\"]', 'pool_manager_001')\n      |                ^\n  349 |     await page.fill('[data-testid=\"password\"]', 'test_password')\n  350 |     await page.click('[data-testid=\"login-button\"]')\n  351 |     "
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 16,
                            "line": 348
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"username\"]')\u001b[22m\n\n\n  346 |     // 1. Authentication flow\n  347 |     await page.goto('/login')\n> 348 |     await page.fill('[data-testid=\"username\"]', 'pool_manager_001')\n      |                ^\n  349 |     await page.fill('[data-testid=\"password\"]', 'test_password')\n  350 |     await page.click('[data-testid=\"login-button\"]')\n  351 |     \n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:348:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:17.297Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Cri-844de-ntial-workflow-connectivity-pool-manager-desktop/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Cri-844de-ntial-workflow-connectivity-pool-manager-desktop/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Cri-844de-ntial-workflow-connectivity-pool-manager-desktop/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 16,
                        "line": 348
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-0ad41198f404ed134227",
              "file": "pool-manager-workflows.spec.ts",
              "line": 343,
              "column": 3
            },
            {
              "title": "Essential workflow connectivity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 70,
                      "parallelIndex": 13,
                      "status": "failed",
                      "duration": 31673,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/login\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:347:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 16,
                          "line": 347
                        },
                        "snippet": "  345 |     \n  346 |     // 1. Authentication flow\n> 347 |     await page.goto('/login')\n      |                ^\n  348 |     await page.fill('[data-testid=\"username\"]', 'pool_manager_001')\n  349 |     await page.fill('[data-testid=\"password\"]', 'test_password')\n  350 |     await page.click('[data-testid=\"login-button\"]')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 16,
                            "line": 347
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/login\", waiting until \"load\"\u001b[22m\n\n\n  345 |     \n  346 |     // 1. Authentication flow\n> 347 |     await page.goto('/login')\n      |                ^\n  348 |     await page.fill('[data-testid=\"username\"]', 'pool_manager_001')\n  349 |     await page.fill('[data-testid=\"password\"]', 'test_password')\n  350 |     await page.click('[data-testid=\"login-button\"]')\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:347:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:08.836Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Cri-844de-ntial-workflow-connectivity-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Cri-844de-ntial-workflow-connectivity-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Cri-844de-ntial-workflow-connectivity-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 16,
                        "line": 347
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-40a196e5d4fd5e07ae2b",
              "file": "pool-manager-workflows.spec.ts",
              "line": 343,
              "column": 3
            },
            {
              "title": "Essential workflow connectivity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit-critical",
                  "projectName": "webkit-critical",
                  "results": [
                    {
                      "workerIndex": 78,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 11264,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"username\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"username\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:348:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                          "column": 16,
                          "line": 348
                        },
                        "snippet": "  346 |     // 1. Authentication flow\n  347 |     await page.goto('/login')\n> 348 |     await page.fill('[data-testid=\"username\"]', 'pool_manager_001')\n      |                ^\n  349 |     await page.fill('[data-testid=\"password\"]', 'test_password')\n  350 |     await page.click('[data-testid=\"login-button\"]')\n  351 |     "
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                            "column": 16,
                            "line": 348
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"username\"]')\u001b[22m\n\n\n  346 |     // 1. Authentication flow\n  347 |     await page.goto('/login')\n> 348 |     await page.fill('[data-testid=\"username\"]', 'pool_manager_001')\n      |                ^\n  349 |     await page.fill('[data-testid=\"password\"]', 'test_password')\n  350 |     await page.click('[data-testid=\"login-button\"]')\n  351 |     \n    at /home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts:348:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:26.328Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Cri-844de-ntial-workflow-connectivity-webkit-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Cri-844de-ntial-workflow-connectivity-webkit-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/pool-manager-workflows-Cri-844de-ntial-workflow-connectivity-webkit-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/pool-manager-workflows.spec.ts",
                        "column": 16,
                        "line": 348
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2c058a9f3c6ee11be25e-92f439ebf8e00f1b8c77",
              "file": "pool-manager-workflows.spec.ts",
              "line": 343,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "technician-workflows.spec.ts",
      "file": "technician-workflows.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Technician Field Workflows",
          "file": "technician-workflows.spec.ts",
          "line": 10,
          "column": 6,
          "specs": [
            {
              "title": "TECH-001: Field Chemical Testing with Mobile Device",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "technician-mobile",
                  "projectName": "technician-mobile",
                  "results": [
                    {
                      "workerIndex": 22,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 12350,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"mobile-test-form\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"mobile-test-form\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:32:68",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 68,
                          "line": 32
                        },
                        "snippet": "  30 |     \n  31 |     // Verify mobile-optimized interface\n> 32 |     await expect(page.locator('[data-testid=\"mobile-test-form\"]')).toBeVisible()\n     |                                                                    ^\n  33 |     await expect(page.locator('[data-testid=\"large-input-fields\"]')).toBeVisible()\n  34 |     \n  35 |     // Simulate QR code pool selection"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 68,
                            "line": 32
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"mobile-test-form\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]')\u001b[22m\n\n\n  30 |     \n  31 |     // Verify mobile-optimized interface\n> 32 |     await expect(page.locator('[data-testid=\"mobile-test-form\"]')).toBeVisible()\n     |                                                                    ^\n  33 |     await expect(page.locator('[data-testid=\"large-input-fields\"]')).toBeVisible()\n  34 |     \n  35 |     // Simulate QR code pool selection\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:32:68"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:17.329Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-0a5f1--Testing-with-Mobile-Device-technician-mobile/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-0a5f1--Testing-with-Mobile-Device-technician-mobile/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-0a5f1--Testing-with-Mobile-Device-technician-mobile/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 68,
                        "line": 32
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-e193dad8e084e595ccb1",
              "file": "technician-workflows.spec.ts",
              "line": 25,
              "column": 3
            },
            {
              "title": "Mobile QR Code Pool Selection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "technician-mobile",
                  "projectName": "technician-mobile",
                  "results": [
                    {
                      "workerIndex": 23,
                      "parallelIndex": 10,
                      "status": "failed",
                      "duration": 12763,
                      "error": {
                        "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"qr-scanner-button\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"qr-scanner-button\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:94:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 94
                        },
                        "snippet": "  92 |     \n  93 |     // Test QR scanner activation\n> 94 |     await page.click('[data-testid=\"qr-scanner-button\"]')\n     |                ^\n  95 |     await expect(page.locator('[data-testid=\"qr-scanner-modal\"]')).toBeVisible()\n  96 |     \n  97 |     // Simulate camera permission granted"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 94
                          },
                          "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"qr-scanner-button\"]')\u001b[22m\n\n\n  92 |     \n  93 |     // Test QR scanner activation\n> 94 |     await page.click('[data-testid=\"qr-scanner-button\"]')\n     |                ^\n  95 |     await expect(page.locator('[data-testid=\"qr-scanner-modal\"]')).toBeVisible()\n  96 |     \n  97 |     // Simulate camera permission granted\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:94:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:17.654Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-81856-bile-QR-Code-Pool-Selection-technician-mobile/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-81856-bile-QR-Code-Pool-Selection-technician-mobile/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-81856-bile-QR-Code-Pool-Selection-technician-mobile/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 94
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-ccf6a9a844c243931927",
              "file": "technician-workflows.spec.ts",
              "line": 90,
              "column": 3
            },
            {
              "title": "Corrective Action Documentation Workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "technician-mobile",
                  "projectName": "technician-mobile",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 11,
                      "status": "failed",
                      "duration": 12083,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:138:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 138
                        },
                        "snippet": "  136 |     \n  137 |     // Enter critical readings\n> 138 |     await page.fill('[data-testid=\"ph-input\"]', '8.1') // Critical high\n      |                ^\n  139 |     await page.fill('[data-testid=\"chlorine-input\"]', '4.2') // Critical high\n  140 |     await page.fill('[data-testid=\"alkalinity-input\"]', '180') // Critical high\n  141 |     await page.fill('[data-testid=\"temperature-input\"]', '88') // High"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 138
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n\n  136 |     \n  137 |     // Enter critical readings\n> 138 |     await page.fill('[data-testid=\"ph-input\"]', '8.1') // Critical high\n      |                ^\n  139 |     await page.fill('[data-testid=\"chlorine-input\"]', '4.2') // Critical high\n  140 |     await page.fill('[data-testid=\"alkalinity-input\"]', '180') // Critical high\n  141 |     await page.fill('[data-testid=\"temperature-input\"]', '88') // High\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:138:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:28.263Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-a1e79-tion-Documentation-Workflow-technician-mobile/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-a1e79-tion-Documentation-Workflow-technician-mobile/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-a1e79-tion-Documentation-Workflow-technician-mobile/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 138
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-efd7b504fe27c4e5baee",
              "file": "technician-workflows.spec.ts",
              "line": 126,
              "column": 3
            },
            {
              "title": "Multiple Pool Route Testing",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "technician-mobile",
                  "projectName": "technician-mobile",
                  "results": [
                    {
                      "workerIndex": 25,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 12425,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:202:18",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 18,
                          "line": 202
                        },
                        "snippet": "  200 |       \n  201 |       // Enter readings\n> 202 |       await page.fill('[data-testid=\"ph-input\"]', pool.readings.ph.toString())\n      |                  ^\n  203 |       await page.fill('[data-testid=\"chlorine-input\"]', pool.readings.chlorine.toString())\n  204 |       await page.fill('[data-testid=\"alkalinity-input\"]', pool.readings.alkalinity.toString())\n  205 |       await page.fill('[data-testid=\"temperature-input\"]', pool.readings.temp.toString())"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 18,
                            "line": 202
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n\n  200 |       \n  201 |       // Enter readings\n> 202 |       await page.fill('[data-testid=\"ph-input\"]', pool.readings.ph.toString())\n      |                  ^\n  203 |       await page.fill('[data-testid=\"chlorine-input\"]', pool.readings.chlorine.toString())\n  204 |       await page.fill('[data-testid=\"alkalinity-input\"]', pool.readings.alkalinity.toString())\n  205 |       await page.fill('[data-testid=\"temperature-input\"]', pool.readings.temp.toString())\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:202:18"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:28.694Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-04c4a-Multiple-Pool-Route-Testing-technician-mobile/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-04c4a-Multiple-Pool-Route-Testing-technician-mobile/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-04c4a-Multiple-Pool-Route-Testing-technician-mobile/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 18,
                        "line": 202
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-66aaf1bd97bdd1a8a666",
              "file": "technician-workflows.spec.ts",
              "line": 180,
              "column": 3
            },
            {
              "title": "Offline Capability and Data Persistence",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "technician-mobile",
                  "projectName": "technician-mobile",
                  "results": [
                    {
                      "workerIndex": 26,
                      "parallelIndex": 14,
                      "status": "failed",
                      "duration": 2074,
                      "error": {
                        "message": "TypeError: page.setOffline is not a function",
                        "stack": "TypeError: page.setOffline is not a function\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:234:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 234
                        },
                        "snippet": "  232 |     \n  233 |     // Go offline\n> 234 |     await page.setOffline(true)\n      |                ^\n  235 |     \n  236 |     // Verify offline mode indicator\n  237 |     await expect(page.locator('[data-testid=\"offline-indicator\"]')).toBeVisible()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 234
                          },
                          "message": "TypeError: page.setOffline is not a function\n\n  232 |     \n  233 |     // Go offline\n> 234 |     await page.setOffline(true)\n      |                ^\n  235 |     \n  236 |     // Verify offline mode indicator\n  237 |     await expect(page.locator('[data-testid=\"offline-indicator\"]')).toBeVisible()\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:234:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:28.918Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-ea378-bility-and-Data-Persistence-technician-mobile/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-ea378-bility-and-Data-Persistence-technician-mobile/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-ea378-bility-and-Data-Persistence-technician-mobile/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 234
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-3c11fdf46d12a78b37dc",
              "file": "technician-workflows.spec.ts",
              "line": 230,
              "column": 3
            },
            {
              "title": "Photo Documentation and Equipment Inspection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "technician-mobile",
                  "projectName": "technician-mobile",
                  "results": [
                    {
                      "workerIndex": 27,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 13406,
                      "error": {
                        "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"start-inspection\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"start-inspection\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:285:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 285
                        },
                        "snippet": "  283 |     \n  284 |     // Start equipment inspection workflow\n> 285 |     await page.click('[data-testid=\"start-inspection\"]')\n      |                ^\n  286 |     \n  287 |     // Select equipment types to inspect\n  288 |     await page.check('[data-testid=\"inspect-chemical-feeders\"]')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 285
                          },
                          "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"start-inspection\"]')\u001b[22m\n\n\n  283 |     \n  284 |     // Start equipment inspection workflow\n> 285 |     await page.click('[data-testid=\"start-inspection\"]')\n      |                ^\n  286 |     \n  287 |     // Select equipment types to inspect\n  288 |     await page.check('[data-testid=\"inspect-chemical-feeders\"]')\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:285:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:29.025Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-6c443-on-and-Equipment-Inspection-technician-mobile/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-6c443-on-and-Equipment-Inspection-technician-mobile/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-6c443-on-and-Equipment-Inspection-technician-mobile/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 285
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-611e11b3c8a7abd9ec63",
              "file": "technician-workflows.spec.ts",
              "line": 281,
              "column": 3
            },
            {
              "title": "Emergency Communication and Escalation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "technician-mobile",
                  "projectName": "technician-mobile",
                  "results": [
                    {
                      "workerIndex": 28,
                      "parallelIndex": 15,
                      "status": "failed",
                      "duration": 13405,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:337:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 337
                        },
                        "snippet": "  335 |     })\n  336 |     \n> 337 |     await page.fill('[data-testid=\"ph-input\"]', '6.4') // Critically low\n      |                ^\n  338 |     await page.fill('[data-testid=\"chlorine-input\"]', '0.3') // Critically low\n  339 |     await page.fill('[data-testid=\"alkalinity-input\"]', '45') // Critically low\n  340 |     "
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 337
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n\n  335 |     })\n  336 |     \n> 337 |     await page.fill('[data-testid=\"ph-input\"]', '6.4') // Critically low\n      |                ^\n  338 |     await page.fill('[data-testid=\"chlorine-input\"]', '0.3') // Critically low\n  339 |     await page.fill('[data-testid=\"alkalinity-input\"]', '45') // Critically low\n  340 |     \n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:337:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:29.241Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-cf33e-ommunication-and-Escalation-technician-mobile/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-cf33e-ommunication-and-Escalation-technician-mobile/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-cf33e-ommunication-and-Escalation-technician-mobile/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 337
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-4d73f2bd48392ec0ac98",
              "file": "technician-workflows.spec.ts",
              "line": 326,
              "column": 3
            },
            {
              "title": "TECH-001: Field Chemical Testing with Mobile Device",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-chrome",
                  "projectName": "mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 11141,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"mobile-test-form\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"mobile-test-form\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:32:68",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 68,
                          "line": 32
                        },
                        "snippet": "  30 |     \n  31 |     // Verify mobile-optimized interface\n> 32 |     await expect(page.locator('[data-testid=\"mobile-test-form\"]')).toBeVisible()\n     |                                                                    ^\n  33 |     await expect(page.locator('[data-testid=\"large-input-fields\"]')).toBeVisible()\n  34 |     \n  35 |     // Simulate QR code pool selection"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 68,
                            "line": 32
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"mobile-test-form\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]')\u001b[22m\n\n\n  30 |     \n  31 |     // Verify mobile-optimized interface\n> 32 |     await expect(page.locator('[data-testid=\"mobile-test-form\"]')).toBeVisible()\n     |                                                                    ^\n  33 |     await expect(page.locator('[data-testid=\"large-input-fields\"]')).toBeVisible()\n  34 |     \n  35 |     // Simulate QR code pool selection\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:32:68"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:28.428Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-0a5f1--Testing-with-Mobile-Device-mobile-chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-0a5f1--Testing-with-Mobile-Device-mobile-chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-0a5f1--Testing-with-Mobile-Device-mobile-chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 68,
                        "line": 32
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-f9d3458234d49a9ab8c0",
              "file": "technician-workflows.spec.ts",
              "line": 25,
              "column": 3
            },
            {
              "title": "Mobile QR Code Pool Selection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-chrome",
                  "projectName": "mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 80,
                      "parallelIndex": 10,
                      "status": "failed",
                      "duration": 11318,
                      "error": {
                        "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"qr-scanner-button\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"qr-scanner-button\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:94:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 94
                        },
                        "snippet": "  92 |     \n  93 |     // Test QR scanner activation\n> 94 |     await page.click('[data-testid=\"qr-scanner-button\"]')\n     |                ^\n  95 |     await expect(page.locator('[data-testid=\"qr-scanner-modal\"]')).toBeVisible()\n  96 |     \n  97 |     // Simulate camera permission granted"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 94
                          },
                          "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"qr-scanner-button\"]')\u001b[22m\n\n\n  92 |     \n  93 |     // Test QR scanner activation\n> 94 |     await page.click('[data-testid=\"qr-scanner-button\"]')\n     |                ^\n  95 |     await expect(page.locator('[data-testid=\"qr-scanner-modal\"]')).toBeVisible()\n  96 |     \n  97 |     // Simulate camera permission granted\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:94:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:28.480Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-81856-bile-QR-Code-Pool-Selection-mobile-chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-81856-bile-QR-Code-Pool-Selection-mobile-chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-81856-bile-QR-Code-Pool-Selection-mobile-chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 94
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-e48e988a3ef78c417583",
              "file": "technician-workflows.spec.ts",
              "line": 90,
              "column": 3
            },
            {
              "title": "Corrective Action Documentation Workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-chrome",
                  "projectName": "mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 81,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 11376,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:138:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 138
                        },
                        "snippet": "  136 |     \n  137 |     // Enter critical readings\n> 138 |     await page.fill('[data-testid=\"ph-input\"]', '8.1') // Critical high\n      |                ^\n  139 |     await page.fill('[data-testid=\"chlorine-input\"]', '4.2') // Critical high\n  140 |     await page.fill('[data-testid=\"alkalinity-input\"]', '180') // Critical high\n  141 |     await page.fill('[data-testid=\"temperature-input\"]', '88') // High"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 138
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n\n  136 |     \n  137 |     // Enter critical readings\n> 138 |     await page.fill('[data-testid=\"ph-input\"]', '8.1') // Critical high\n      |                ^\n  139 |     await page.fill('[data-testid=\"chlorine-input\"]', '4.2') // Critical high\n  140 |     await page.fill('[data-testid=\"alkalinity-input\"]', '180') // Critical high\n  141 |     await page.fill('[data-testid=\"temperature-input\"]', '88') // High\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:138:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:28.635Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-a1e79-tion-Documentation-Workflow-mobile-chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-a1e79-tion-Documentation-Workflow-mobile-chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-a1e79-tion-Documentation-Workflow-mobile-chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 138
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-52fb0632caa24c2a1a4e",
              "file": "technician-workflows.spec.ts",
              "line": 126,
              "column": 3
            },
            {
              "title": "Multiple Pool Route Testing",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-chrome",
                  "projectName": "mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 82,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 11769,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:202:18",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 18,
                          "line": 202
                        },
                        "snippet": "  200 |       \n  201 |       // Enter readings\n> 202 |       await page.fill('[data-testid=\"ph-input\"]', pool.readings.ph.toString())\n      |                  ^\n  203 |       await page.fill('[data-testid=\"chlorine-input\"]', pool.readings.chlorine.toString())\n  204 |       await page.fill('[data-testid=\"alkalinity-input\"]', pool.readings.alkalinity.toString())\n  205 |       await page.fill('[data-testid=\"temperature-input\"]', pool.readings.temp.toString())"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 18,
                            "line": 202
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n\n  200 |       \n  201 |       // Enter readings\n> 202 |       await page.fill('[data-testid=\"ph-input\"]', pool.readings.ph.toString())\n      |                  ^\n  203 |       await page.fill('[data-testid=\"chlorine-input\"]', pool.readings.chlorine.toString())\n  204 |       await page.fill('[data-testid=\"alkalinity-input\"]', pool.readings.alkalinity.toString())\n  205 |       await page.fill('[data-testid=\"temperature-input\"]', pool.readings.temp.toString())\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:202:18"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:28.842Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-04c4a-Multiple-Pool-Route-Testing-mobile-chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-04c4a-Multiple-Pool-Route-Testing-mobile-chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-04c4a-Multiple-Pool-Route-Testing-mobile-chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 18,
                        "line": 202
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-759f4804bce9c09025f4",
              "file": "technician-workflows.spec.ts",
              "line": 180,
              "column": 3
            },
            {
              "title": "Offline Capability and Data Persistence",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-chrome",
                  "projectName": "mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 83,
                      "parallelIndex": 15,
                      "status": "failed",
                      "duration": 1594,
                      "error": {
                        "message": "TypeError: page.setOffline is not a function",
                        "stack": "TypeError: page.setOffline is not a function\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:234:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 234
                        },
                        "snippet": "  232 |     \n  233 |     // Go offline\n> 234 |     await page.setOffline(true)\n      |                ^\n  235 |     \n  236 |     // Verify offline mode indicator\n  237 |     await expect(page.locator('[data-testid=\"offline-indicator\"]')).toBeVisible()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 234
                          },
                          "message": "TypeError: page.setOffline is not a function\n\n  232 |     \n  233 |     // Go offline\n> 234 |     await page.setOffline(true)\n      |                ^\n  235 |     \n  236 |     // Verify offline mode indicator\n  237 |     await expect(page.locator('[data-testid=\"offline-indicator\"]')).toBeVisible()\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:234:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:28.920Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-ea378-bility-and-Data-Persistence-mobile-chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-ea378-bility-and-Data-Persistence-mobile-chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-ea378-bility-and-Data-Persistence-mobile-chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 234
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-29e4835b6fec3eb90fef",
              "file": "technician-workflows.spec.ts",
              "line": 230,
              "column": 3
            },
            {
              "title": "Photo Documentation and Equipment Inspection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-chrome",
                  "projectName": "mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 84,
                      "parallelIndex": 12,
                      "status": "failed",
                      "duration": 11717,
                      "error": {
                        "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"start-inspection\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"start-inspection\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:285:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 285
                        },
                        "snippet": "  283 |     \n  284 |     // Start equipment inspection workflow\n> 285 |     await page.click('[data-testid=\"start-inspection\"]')\n      |                ^\n  286 |     \n  287 |     // Select equipment types to inspect\n  288 |     await page.check('[data-testid=\"inspect-chemical-feeders\"]')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 285
                          },
                          "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"start-inspection\"]')\u001b[22m\n\n\n  283 |     \n  284 |     // Start equipment inspection workflow\n> 285 |     await page.click('[data-testid=\"start-inspection\"]')\n      |                ^\n  286 |     \n  287 |     // Select equipment types to inspect\n  288 |     await page.check('[data-testid=\"inspect-chemical-feeders\"]')\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:285:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:28.912Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-6c443-on-and-Equipment-Inspection-mobile-chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-6c443-on-and-Equipment-Inspection-mobile-chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-6c443-on-and-Equipment-Inspection-mobile-chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 285
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-b59cb495b88e4ed56aff",
              "file": "technician-workflows.spec.ts",
              "line": 281,
              "column": 3
            },
            {
              "title": "Emergency Communication and Escalation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-chrome",
                  "projectName": "mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 85,
                      "parallelIndex": 8,
                      "status": "failed",
                      "duration": 11370,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:337:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 337
                        },
                        "snippet": "  335 |     })\n  336 |     \n> 337 |     await page.fill('[data-testid=\"ph-input\"]', '6.4') // Critically low\n      |                ^\n  338 |     await page.fill('[data-testid=\"chlorine-input\"]', '0.3') // Critically low\n  339 |     await page.fill('[data-testid=\"alkalinity-input\"]', '45') // Critically low\n  340 |     "
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 337
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n\n  335 |     })\n  336 |     \n> 337 |     await page.fill('[data-testid=\"ph-input\"]', '6.4') // Critically low\n      |                ^\n  338 |     await page.fill('[data-testid=\"chlorine-input\"]', '0.3') // Critically low\n  339 |     await page.fill('[data-testid=\"alkalinity-input\"]', '45') // Critically low\n  340 |     \n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:337:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:29.176Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-cf33e-ommunication-and-Escalation-mobile-chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-cf33e-ommunication-and-Escalation-mobile-chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-cf33e-ommunication-and-Escalation-mobile-chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 337
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-c253eb5ab79a101f716e",
              "file": "technician-workflows.spec.ts",
              "line": 326,
              "column": 3
            },
            {
              "title": "TECH-001: Field Chemical Testing with Mobile Device",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-safari",
                  "projectName": "mobile-safari",
                  "results": [
                    {
                      "workerIndex": 88,
                      "parallelIndex": 14,
                      "status": "failed",
                      "duration": 11670,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"mobile-test-form\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"mobile-test-form\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:32:68",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 68,
                          "line": 32
                        },
                        "snippet": "  30 |     \n  31 |     // Verify mobile-optimized interface\n> 32 |     await expect(page.locator('[data-testid=\"mobile-test-form\"]')).toBeVisible()\n     |                                                                    ^\n  33 |     await expect(page.locator('[data-testid=\"large-input-fields\"]')).toBeVisible()\n  34 |     \n  35 |     // Simulate QR code pool selection"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 68,
                            "line": 32
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"mobile-test-form\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]')\u001b[22m\n\n\n  30 |     \n  31 |     // Verify mobile-optimized interface\n> 32 |     await expect(page.locator('[data-testid=\"mobile-test-form\"]')).toBeVisible()\n     |                                                                    ^\n  33 |     await expect(page.locator('[data-testid=\"large-input-fields\"]')).toBeVisible()\n  34 |     \n  35 |     // Simulate QR code pool selection\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:32:68"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:31.994Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-0a5f1--Testing-with-Mobile-Device-mobile-safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-0a5f1--Testing-with-Mobile-Device-mobile-safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-0a5f1--Testing-with-Mobile-Device-mobile-safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 68,
                        "line": 32
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-72966e26eb956ab38511",
              "file": "technician-workflows.spec.ts",
              "line": 25,
              "column": 3
            },
            {
              "title": "Mobile QR Code Pool Selection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-safari",
                  "projectName": "mobile-safari",
                  "results": [
                    {
                      "workerIndex": 89,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 11611,
                      "error": {
                        "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"qr-scanner-button\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"qr-scanner-button\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:94:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 94
                        },
                        "snippet": "  92 |     \n  93 |     // Test QR scanner activation\n> 94 |     await page.click('[data-testid=\"qr-scanner-button\"]')\n     |                ^\n  95 |     await expect(page.locator('[data-testid=\"qr-scanner-modal\"]')).toBeVisible()\n  96 |     \n  97 |     // Simulate camera permission granted"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 94
                          },
                          "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"qr-scanner-button\"]')\u001b[22m\n\n\n  92 |     \n  93 |     // Test QR scanner activation\n> 94 |     await page.click('[data-testid=\"qr-scanner-button\"]')\n     |                ^\n  95 |     await expect(page.locator('[data-testid=\"qr-scanner-modal\"]')).toBeVisible()\n  96 |     \n  97 |     // Simulate camera permission granted\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:94:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:33.905Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-81856-bile-QR-Code-Pool-Selection-mobile-safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-81856-bile-QR-Code-Pool-Selection-mobile-safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-81856-bile-QR-Code-Pool-Selection-mobile-safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 94
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-46a26ca62d296e7ca3ad",
              "file": "technician-workflows.spec.ts",
              "line": 90,
              "column": 3
            },
            {
              "title": "Corrective Action Documentation Workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-safari",
                  "projectName": "mobile-safari",
                  "results": [
                    {
                      "workerIndex": 90,
                      "parallelIndex": 7,
                      "status": "failed",
                      "duration": 12097,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:138:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 138
                        },
                        "snippet": "  136 |     \n  137 |     // Enter critical readings\n> 138 |     await page.fill('[data-testid=\"ph-input\"]', '8.1') // Critical high\n      |                ^\n  139 |     await page.fill('[data-testid=\"chlorine-input\"]', '4.2') // Critical high\n  140 |     await page.fill('[data-testid=\"alkalinity-input\"]', '180') // Critical high\n  141 |     await page.fill('[data-testid=\"temperature-input\"]', '88') // High"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 138
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n\n  136 |     \n  137 |     // Enter critical readings\n> 138 |     await page.fill('[data-testid=\"ph-input\"]', '8.1') // Critical high\n      |                ^\n  139 |     await page.fill('[data-testid=\"chlorine-input\"]', '4.2') // Critical high\n  140 |     await page.fill('[data-testid=\"alkalinity-input\"]', '180') // Critical high\n  141 |     await page.fill('[data-testid=\"temperature-input\"]', '88') // High\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:138:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:33.924Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-a1e79-tion-Documentation-Workflow-mobile-safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-a1e79-tion-Documentation-Workflow-mobile-safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-a1e79-tion-Documentation-Workflow-mobile-safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 138
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-f34e737b1de9085e0224",
              "file": "technician-workflows.spec.ts",
              "line": 126,
              "column": 3
            },
            {
              "title": "Multiple Pool Route Testing",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-safari",
                  "projectName": "mobile-safari",
                  "results": [
                    {
                      "workerIndex": 91,
                      "parallelIndex": 11,
                      "status": "failed",
                      "duration": 11687,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:202:18",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 18,
                          "line": 202
                        },
                        "snippet": "  200 |       \n  201 |       // Enter readings\n> 202 |       await page.fill('[data-testid=\"ph-input\"]', pool.readings.ph.toString())\n      |                  ^\n  203 |       await page.fill('[data-testid=\"chlorine-input\"]', pool.readings.chlorine.toString())\n  204 |       await page.fill('[data-testid=\"alkalinity-input\"]', pool.readings.alkalinity.toString())\n  205 |       await page.fill('[data-testid=\"temperature-input\"]', pool.readings.temp.toString())"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 18,
                            "line": 202
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n\n  200 |       \n  201 |       // Enter readings\n> 202 |       await page.fill('[data-testid=\"ph-input\"]', pool.readings.ph.toString())\n      |                  ^\n  203 |       await page.fill('[data-testid=\"chlorine-input\"]', pool.readings.chlorine.toString())\n  204 |       await page.fill('[data-testid=\"alkalinity-input\"]', pool.readings.alkalinity.toString())\n  205 |       await page.fill('[data-testid=\"temperature-input\"]', pool.readings.temp.toString())\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:202:18"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:35.478Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-04c4a-Multiple-Pool-Route-Testing-mobile-safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-04c4a-Multiple-Pool-Route-Testing-mobile-safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-04c4a-Multiple-Pool-Route-Testing-mobile-safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 18,
                        "line": 202
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-bd32f9079fbc2f9311c4",
              "file": "technician-workflows.spec.ts",
              "line": 180,
              "column": 3
            },
            {
              "title": "Offline Capability and Data Persistence",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-safari",
                  "projectName": "mobile-safari",
                  "results": [
                    {
                      "workerIndex": 92,
                      "parallelIndex": 9,
                      "status": "failed",
                      "duration": 2129,
                      "error": {
                        "message": "TypeError: page.setOffline is not a function",
                        "stack": "TypeError: page.setOffline is not a function\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:234:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 234
                        },
                        "snippet": "  232 |     \n  233 |     // Go offline\n> 234 |     await page.setOffline(true)\n      |                ^\n  235 |     \n  236 |     // Verify offline mode indicator\n  237 |     await expect(page.locator('[data-testid=\"offline-indicator\"]')).toBeVisible()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 234
                          },
                          "message": "TypeError: page.setOffline is not a function\n\n  232 |     \n  233 |     // Go offline\n> 234 |     await page.setOffline(true)\n      |                ^\n  235 |     \n  236 |     // Verify offline mode indicator\n  237 |     await expect(page.locator('[data-testid=\"offline-indicator\"]')).toBeVisible()\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:234:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:38.449Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-ea378-bility-and-Data-Persistence-mobile-safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-ea378-bility-and-Data-Persistence-mobile-safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-ea378-bility-and-Data-Persistence-mobile-safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 234
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-91f141df0c058df57389",
              "file": "technician-workflows.spec.ts",
              "line": 230,
              "column": 3
            },
            {
              "title": "Photo Documentation and Equipment Inspection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-safari",
                  "projectName": "mobile-safari",
                  "results": [
                    {
                      "workerIndex": 93,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 12219,
                      "error": {
                        "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"start-inspection\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"start-inspection\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:285:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 285
                        },
                        "snippet": "  283 |     \n  284 |     // Start equipment inspection workflow\n> 285 |     await page.click('[data-testid=\"start-inspection\"]')\n      |                ^\n  286 |     \n  287 |     // Select equipment types to inspect\n  288 |     await page.check('[data-testid=\"inspect-chemical-feeders\"]')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 285
                          },
                          "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"start-inspection\"]')\u001b[22m\n\n\n  283 |     \n  284 |     // Start equipment inspection workflow\n> 285 |     await page.click('[data-testid=\"start-inspection\"]')\n      |                ^\n  286 |     \n  287 |     // Select equipment types to inspect\n  288 |     await page.check('[data-testid=\"inspect-chemical-feeders\"]')\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:285:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:38.701Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-6c443-on-and-Equipment-Inspection-mobile-safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-6c443-on-and-Equipment-Inspection-mobile-safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-6c443-on-and-Equipment-Inspection-mobile-safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 285
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-f2142bee60289dd4e3c7",
              "file": "technician-workflows.spec.ts",
              "line": 281,
              "column": 3
            },
            {
              "title": "Emergency Communication and Escalation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-safari",
                  "projectName": "mobile-safari",
                  "results": [
                    {
                      "workerIndex": 94,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 12508,
                      "error": {
                        "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:337:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 337
                        },
                        "snippet": "  335 |     })\n  336 |     \n> 337 |     await page.fill('[data-testid=\"ph-input\"]', '6.4') // Critically low\n      |                ^\n  338 |     await page.fill('[data-testid=\"chlorine-input\"]', '0.3') // Critically low\n  339 |     await page.fill('[data-testid=\"alkalinity-input\"]', '45') // Critically low\n  340 |     "
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 337
                          },
                          "message": "TimeoutError: page.fill: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"ph-input\"]')\u001b[22m\n\n\n  335 |     })\n  336 |     \n> 337 |     await page.fill('[data-testid=\"ph-input\"]', '6.4') // Critically low\n      |                ^\n  338 |     await page.fill('[data-testid=\"chlorine-input\"]', '0.3') // Critically low\n  339 |     await page.fill('[data-testid=\"alkalinity-input\"]', '45') // Critically low\n  340 |     \n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:337:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:39.386Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-cf33e-ommunication-and-Escalation-mobile-safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-cf33e-ommunication-and-Escalation-mobile-safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Techn-cf33e-ommunication-and-Escalation-mobile-safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 337
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-97f59fc62ecafea6431e",
              "file": "technician-workflows.spec.ts",
              "line": 326,
              "column": 3
            }
          ]
        },
        {
          "title": "Mobile Performance and Usability",
          "file": "technician-workflows.spec.ts",
          "line": 373,
          "column": 6,
          "specs": [
            {
              "title": "Touch interface optimization",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "technician-mobile",
                  "projectName": "technician-mobile",
                  "results": [
                    {
                      "workerIndex": 29,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 2514,
                      "error": {
                        "message": "TypeError: page.touchTap is not a function",
                        "stack": "TypeError: page.touchTap is not a function\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:386:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 386
                        },
                        "snippet": "  384 |     \n  385 |     // Test touch gestures\n> 386 |     await page.touchTap('[data-testid=\"ph-input\"]')\n      |                ^\n  387 |     await expect(page.locator('[data-testid=\"ph-input\"]')).toBeFocused()\n  388 |     \n  389 |     // Test swipe navigation"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 386
                          },
                          "message": "TypeError: page.touchTap is not a function\n\n  384 |     \n  385 |     // Test touch gestures\n> 386 |     await page.touchTap('[data-testid=\"ph-input\"]')\n      |                ^\n  387 |     await expect(page.locator('[data-testid=\"ph-input\"]')).toBeFocused()\n  388 |     \n  389 |     // Test swipe navigation\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:386:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:29.145Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-f45e7-ouch-interface-optimization-technician-mobile/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-f45e7-ouch-interface-optimization-technician-mobile/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-f45e7-ouch-interface-optimization-technician-mobile/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 386
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-49c39248e4690c9e93de",
              "file": "technician-workflows.spec.ts",
              "line": 375,
              "column": 3
            },
            {
              "title": "Mobile performance benchmarks",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "technician-mobile",
                  "projectName": "technician-mobile",
                  "results": [
                    {
                      "workerIndex": 30,
                      "parallelIndex": 8,
                      "status": "failed",
                      "duration": 11513,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]') to be visible\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:397:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 397
                        },
                        "snippet": "  395 |     const startTime = Date.now()\n  396 |     await page.goto('/mobile/test-entry')\n> 397 |     await page.waitForSelector('[data-testid=\"mobile-test-form\"]')\n      |                ^\n  398 |     const loadTime = Date.now() - startTime\n  399 |     \n  400 |     // Mobile load time should be under 2 seconds"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 397
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]') to be visible\u001b[22m\n\n\n  395 |     const startTime = Date.now()\n  396 |     await page.goto('/mobile/test-entry')\n> 397 |     await page.waitForSelector('[data-testid=\"mobile-test-form\"]')\n      |                ^\n  398 |     const loadTime = Date.now() - startTime\n  399 |     \n  400 |     // Mobile load time should be under 2 seconds\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:397:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:29.552Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-6c908-bile-performance-benchmarks-technician-mobile/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-6c908-bile-performance-benchmarks-technician-mobile/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-6c908-bile-performance-benchmarks-technician-mobile/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 397
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-3d9ecf6347acc4f8711b",
              "file": "technician-workflows.spec.ts",
              "line": 394,
              "column": 3
            },
            {
              "title": "Touch interface optimization",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-chrome",
                  "projectName": "mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 86,
                      "parallelIndex": 7,
                      "status": "failed",
                      "duration": 911,
                      "error": {
                        "message": "TypeError: page.touchTap is not a function",
                        "stack": "TypeError: page.touchTap is not a function\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:386:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 386
                        },
                        "snippet": "  384 |     \n  385 |     // Test touch gestures\n> 386 |     await page.touchTap('[data-testid=\"ph-input\"]')\n      |                ^\n  387 |     await expect(page.locator('[data-testid=\"ph-input\"]')).toBeFocused()\n  388 |     \n  389 |     // Test swipe navigation"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 386
                          },
                          "message": "TypeError: page.touchTap is not a function\n\n  384 |     \n  385 |     // Test touch gestures\n> 386 |     await page.touchTap('[data-testid=\"ph-input\"]')\n      |                ^\n  387 |     await expect(page.locator('[data-testid=\"ph-input\"]')).toBeFocused()\n  388 |     \n  389 |     // Test swipe navigation\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:386:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:31.725Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-f45e7-ouch-interface-optimization-mobile-chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-f45e7-ouch-interface-optimization-mobile-chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-f45e7-ouch-interface-optimization-mobile-chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 386
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-8a7749545a5de9f536af",
              "file": "technician-workflows.spec.ts",
              "line": 375,
              "column": 3
            },
            {
              "title": "Mobile performance benchmarks",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-chrome",
                  "projectName": "mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 87,
                      "parallelIndex": 15,
                      "status": "failed",
                      "duration": 10686,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]') to be visible\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:397:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 397
                        },
                        "snippet": "  395 |     const startTime = Date.now()\n  396 |     await page.goto('/mobile/test-entry')\n> 397 |     await page.waitForSelector('[data-testid=\"mobile-test-form\"]')\n      |                ^\n  398 |     const loadTime = Date.now() - startTime\n  399 |     \n  400 |     // Mobile load time should be under 2 seconds"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 397
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]') to be visible\u001b[22m\n\n\n  395 |     const startTime = Date.now()\n  396 |     await page.goto('/mobile/test-entry')\n> 397 |     await page.waitForSelector('[data-testid=\"mobile-test-form\"]')\n      |                ^\n  398 |     const loadTime = Date.now() - startTime\n  399 |     \n  400 |     // Mobile load time should be under 2 seconds\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:397:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:31.755Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-6c908-bile-performance-benchmarks-mobile-chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-6c908-bile-performance-benchmarks-mobile-chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-6c908-bile-performance-benchmarks-mobile-chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 397
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-fedfa85f169d302a4e73",
              "file": "technician-workflows.spec.ts",
              "line": 394,
              "column": 3
            },
            {
              "title": "Touch interface optimization",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-safari",
                  "projectName": "mobile-safari",
                  "results": [
                    {
                      "workerIndex": 95,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1576,
                      "error": {
                        "message": "TypeError: page.touchTap is not a function",
                        "stack": "TypeError: page.touchTap is not a function\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:386:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 386
                        },
                        "snippet": "  384 |     \n  385 |     // Test touch gestures\n> 386 |     await page.touchTap('[data-testid=\"ph-input\"]')\n      |                ^\n  387 |     await expect(page.locator('[data-testid=\"ph-input\"]')).toBeFocused()\n  388 |     \n  389 |     // Test swipe navigation"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 386
                          },
                          "message": "TypeError: page.touchTap is not a function\n\n  384 |     \n  385 |     // Test touch gestures\n> 386 |     await page.touchTap('[data-testid=\"ph-input\"]')\n      |                ^\n  387 |     await expect(page.locator('[data-testid=\"ph-input\"]')).toBeFocused()\n  388 |     \n  389 |     // Test swipe navigation\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:386:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:39.788Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-f45e7-ouch-interface-optimization-mobile-safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-f45e7-ouch-interface-optimization-mobile-safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-f45e7-ouch-interface-optimization-mobile-safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 386
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-0cf1617228aef65d50ba",
              "file": "technician-workflows.spec.ts",
              "line": 375,
              "column": 3
            },
            {
              "title": "Mobile performance benchmarks",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "mobile-safari",
                  "projectName": "mobile-safari",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 11738,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]') to be visible\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:397:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                          "column": 16,
                          "line": 397
                        },
                        "snippet": "  395 |     const startTime = Date.now()\n  396 |     await page.goto('/mobile/test-entry')\n> 397 |     await page.waitForSelector('[data-testid=\"mobile-test-form\"]')\n      |                ^\n  398 |     const loadTime = Date.now() - startTime\n  399 |     \n  400 |     // Mobile load time should be under 2 seconds"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                            "column": 16,
                            "line": 397
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"mobile-test-form\"]') to be visible\u001b[22m\n\n\n  395 |     const startTime = Date.now()\n  396 |     await page.goto('/mobile/test-entry')\n> 397 |     await page.waitForSelector('[data-testid=\"mobile-test-form\"]')\n      |                ^\n  398 |     const loadTime = Date.now() - startTime\n  399 |     \n  400 |     // Mobile load time should be under 2 seconds\n    at /home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts:397:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:21:41.335Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-6c908-bile-performance-benchmarks-mobile-safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-6c908-bile-performance-benchmarks-mobile-safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/technician-workflows-Mobil-6c908-bile-performance-benchmarks-mobile-safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/technician-workflows.spec.ts",
                        "column": 16,
                        "line": 397
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "48d8f63d932dba8b04cb-0416607d1bddf257daa2",
              "file": "technician-workflows.spec.ts",
              "line": 394,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "emergency-response.spec.ts",
      "file": "emergency-response.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Emergency Response Workflows",
          "file": "emergency-response.spec.ts",
          "line": 10,
          "column": 6,
          "specs": [
            {
              "title": "EMG-001: Chemical Spill Emergency Response",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "emergency-response",
                  "projectName": "emergency-response",
                  "results": [
                    {
                      "workerIndex": 31,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 11183,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"emergency-incident-form\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"emergency-incident-form\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"emergency-incident-form\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"emergency-incident-form\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:28:75",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 75,
                          "line": 28
                        },
                        "snippet": "  26 |     // Navigate to emergency incident form\n  27 |     await page.goto('/emergency/incident')\n> 28 |     await expect(page.locator('[data-testid=\"emergency-incident-form\"]')).toBeVisible()\n     |                                                                           ^\n  29 |     \n  30 |     // Verify emergency interface is prominent and clear\n  31 |     await expect(page.locator('[data-testid=\"emergency-header\"]')).toHaveCSS('background-color', 'rgb(239, 68, 68)') // Red emergency color"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 75,
                            "line": 28
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"emergency-incident-form\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"emergency-incident-form\"]')\u001b[22m\n\n\n  26 |     // Navigate to emergency incident form\n  27 |     await page.goto('/emergency/incident')\n> 28 |     await expect(page.locator('[data-testid=\"emergency-incident-form\"]')).toBeVisible()\n     |                                                                           ^\n  29 |     \n  30 |     // Verify emergency interface is prominent and clear\n  31 |     await expect(page.locator('[data-testid=\"emergency-header\"]')).toHaveCSS('background-color', 'rgb(239, 68, 68)') // Red emergency color\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:28:75"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:29.621Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-8613e-al-Spill-Emergency-Response-emergency-response/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-8613e-al-Spill-Emergency-Response-emergency-response/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-8613e-al-Spill-Emergency-Response-emergency-response/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 75,
                        "line": 28
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-3c33399a0e89141c162c",
              "file": "emergency-response.spec.ts",
              "line": 23,
              "column": 3
            },
            {
              "title": "Critical Chemical Level Emergency",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "emergency-response",
                  "projectName": "emergency-response",
                  "results": [
                    {
                      "workerIndex": 32,
                      "parallelIndex": 12,
                      "status": "failed",
                      "duration": 11207,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"critical-chemical-alert\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"critical-chemical-alert\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"critical-chemical-alert\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"critical-chemical-alert\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:120:75",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 75,
                          "line": 120
                        },
                        "snippet": "  118 |     \n  119 |     // Verify emergency dashboard shows critical alert\n> 120 |     await expect(page.locator('[data-testid=\"critical-chemical-alert\"]')).toBeVisible()\n      |                                                                           ^\n  121 |     await expect(page.locator('[data-testid=\"alert-severity\"]')).toContainText('EMERGENCY')\n  122 |     \n  123 |     // Initiate emergency chemical response"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 75,
                            "line": 120
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"critical-chemical-alert\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"critical-chemical-alert\"]')\u001b[22m\n\n\n  118 |     \n  119 |     // Verify emergency dashboard shows critical alert\n> 120 |     await expect(page.locator('[data-testid=\"critical-chemical-alert\"]')).toBeVisible()\n      |                                                                           ^\n  121 |     await expect(page.locator('[data-testid=\"alert-severity\"]')).toContainText('EMERGENCY')\n  122 |     \n  123 |     // Initiate emergency chemical response\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:120:75"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:29.784Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-51bf8-al-Chemical-Level-Emergency-emergency-response/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-51bf8-al-Chemical-Level-Emergency-emergency-response/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-51bf8-al-Chemical-Level-Emergency-emergency-response/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 75,
                        "line": 120
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-4c7545fd0132fb096191",
              "file": "emergency-response.spec.ts",
              "line": 102,
              "column": 3
            },
            {
              "title": "Multi-Pool Emergency Coordination",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "emergency-response",
                  "projectName": "emergency-response",
                  "results": [
                    {
                      "workerIndex": 33,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 11362,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"emergency-coordination-board\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"emergency-coordination-board\"]')\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"emergency-coordination-board\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"emergency-coordination-board\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:188:80",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 80,
                          "line": 188
                        },
                        "snippet": "  186 |     \n  187 |     // Verify emergency coordination dashboard\n> 188 |     await expect(page.locator('[data-testid=\"emergency-coordination-board\"]')).toBeVisible()\n      |                                                                                ^\n  189 |     await expect(page.locator('[data-testid=\"active-emergencies-count\"]')).toContainText('3')\n  190 |     \n  191 |     // Check each emergency status"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 80,
                            "line": 188
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('[data-testid=\"emergency-coordination-board\"]')\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('[data-testid=\"emergency-coordination-board\"]')\u001b[22m\n\n\n  186 |     \n  187 |     // Verify emergency coordination dashboard\n> 188 |     await expect(page.locator('[data-testid=\"emergency-coordination-board\"]')).toBeVisible()\n      |                                                                                ^\n  189 |     await expect(page.locator('[data-testid=\"active-emergencies-count\"]')).toContainText('3')\n  190 |     \n  191 |     // Check each emergency status\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:188:80"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:30.103Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-e07cd-Pool-Emergency-Coordination-emergency-response/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-e07cd-Pool-Emergency-Coordination-emergency-response/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-e07cd-Pool-Emergency-Coordination-emergency-response/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 80,
                        "line": 188
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-c1e9896d4d0e76bf2c13",
              "file": "emergency-response.spec.ts",
              "line": 156,
              "column": 3
            },
            {
              "title": "Emergency Communication Systems",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "emergency-response",
                  "projectName": "emergency-response",
                  "results": [
                    {
                      "workerIndex": 35,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 10990,
                      "error": {
                        "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"activate-emergency-hotline\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"activate-emergency-hotline\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:225:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 16,
                          "line": 225
                        },
                        "snippet": "  223 |     \n  224 |     // Test emergency hotline activation\n> 225 |     await page.click('[data-testid=\"activate-emergency-hotline\"]')\n      |                ^\n  226 |     await expect(page.locator('[data-testid=\"hotline-active\"]')).toContainText('Emergency hotline: (555) POOL-911 is now active')\n  227 |     \n  228 |     // Test mass notification system"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 16,
                            "line": 225
                          },
                          "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"activate-emergency-hotline\"]')\u001b[22m\n\n\n  223 |     \n  224 |     // Test emergency hotline activation\n> 225 |     await page.click('[data-testid=\"activate-emergency-hotline\"]')\n      |                ^\n  226 |     await expect(page.locator('[data-testid=\"hotline-active\"]')).toContainText('Emergency hotline: (555) POOL-911 is now active')\n  227 |     \n  228 |     // Test mass notification system\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:225:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:30.224Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-356e4-gency-Communication-Systems-emergency-response/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-356e4-gency-Communication-Systems-emergency-response/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-356e4-gency-Communication-Systems-emergency-response/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 16,
                        "line": 225
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-c4e1feb5a1f3c3237b3f",
              "file": "emergency-response.spec.ts",
              "line": 221,
              "column": 3
            },
            {
              "title": "Regulatory Compliance During Emergency",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "emergency-response",
                  "projectName": "emergency-response",
                  "results": [
                    {
                      "workerIndex": 34,
                      "parallelIndex": 7,
                      "status": "failed",
                      "duration": 11310,
                      "error": {
                        "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"regulatory-reporting\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"regulatory-reporting\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:274:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 16,
                          "line": 274
                        },
                        "snippet": "  272 |     \n  273 |     // Navigate to regulatory reporting\n> 274 |     await page.click('[data-testid=\"regulatory-reporting\"]')\n      |                ^\n  275 |     \n  276 |     // Verify regulatory agencies notification\n  277 |     await expect(page.locator('[data-testid=\"osha-notification\"]')).toBeVisible()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 16,
                            "line": 274
                          },
                          "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"regulatory-reporting\"]')\u001b[22m\n\n\n  272 |     \n  273 |     // Navigate to regulatory reporting\n> 274 |     await page.click('[data-testid=\"regulatory-reporting\"]')\n      |                ^\n  275 |     \n  276 |     // Verify regulatory agencies notification\n  277 |     await expect(page.locator('[data-testid=\"osha-notification\"]')).toBeVisible()\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:274:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:30.199Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-e9907-Compliance-During-Emergency-emergency-response/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-e9907-Compliance-During-Emergency-emergency-response/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-e9907-Compliance-During-Emergency-emergency-response/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 16,
                        "line": 274
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-89568506ac7d657083e2",
              "file": "emergency-response.spec.ts",
              "line": 258,
              "column": 3
            },
            {
              "title": "Emergency Recovery and Reopening Protocol",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "emergency-response",
                  "projectName": "emergency-response",
                  "results": [
                    {
                      "workerIndex": 36,
                      "parallelIndex": 9,
                      "status": "failed",
                      "duration": 11339,
                      "error": {
                        "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"begin-recovery-process\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"begin-recovery-process\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:321:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 16,
                          "line": 321
                        },
                        "snippet": "  319 |     \n  320 |     // Begin recovery process\n> 321 |     await page.click('[data-testid=\"begin-recovery-process\"]')\n      |                ^\n  322 |     \n  323 |     // Safety verification checklist\n  324 |     await page.check('[data-testid=\"verify-chemical-levels-safe\"]')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 16,
                            "line": 321
                          },
                          "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"begin-recovery-process\"]')\u001b[22m\n\n\n  319 |     \n  320 |     // Begin recovery process\n> 321 |     await page.click('[data-testid=\"begin-recovery-process\"]')\n      |                ^\n  322 |     \n  323 |     // Safety verification checklist\n  324 |     await page.check('[data-testid=\"verify-chemical-levels-safe\"]')\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:321:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:30.263Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-32147-very-and-Reopening-Protocol-emergency-response/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-32147-very-and-Reopening-Protocol-emergency-response/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-32147-very-and-Reopening-Protocol-emergency-response/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 16,
                        "line": 321
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-af33f4cf78a65c6ac841",
              "file": "emergency-response.spec.ts",
              "line": 305,
              "column": 3
            },
            {
              "title": "EMG-001: Chemical Spill Emergency Response",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 55,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 32836,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:13:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 16,
                          "line": 13
                        },
                        "snippet": "  11 |   test.beforeEach(async ({ page }) => {\n  12 |     // Setup emergency responder authentication\n> 13 |     await page.goto('/')\n     |                ^\n  14 |     await page.evaluate(() => {\n  15 |       localStorage.setItem('auth-token', 'mock-emergency-responder-token')\n  16 |       localStorage.setItem('user-role', 'emergency_responder')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 16,
                            "line": 13
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n\n  11 |   test.beforeEach(async ({ page }) => {\n  12 |     // Setup emergency responder authentication\n> 13 |     await page.goto('/')\n     |                ^\n  14 |     await page.evaluate(() => {\n  15 |       localStorage.setItem('auth-token', 'mock-emergency-responder-token')\n  16 |       localStorage.setItem('user-role', 'emergency_responder')\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:13:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:43.225Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-8613e-al-Spill-Emergency-Response-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-8613e-al-Spill-Emergency-Response-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-8613e-al-Spill-Emergency-Response-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 16,
                        "line": 13
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-117fcda9da5be0b36ca2",
              "file": "emergency-response.spec.ts",
              "line": 23,
              "column": 3
            },
            {
              "title": "Critical Chemical Level Emergency",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 56,
                      "parallelIndex": 7,
                      "status": "failed",
                      "duration": 31549,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:13:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 16,
                          "line": 13
                        },
                        "snippet": "  11 |   test.beforeEach(async ({ page }) => {\n  12 |     // Setup emergency responder authentication\n> 13 |     await page.goto('/')\n     |                ^\n  14 |     await page.evaluate(() => {\n  15 |       localStorage.setItem('auth-token', 'mock-emergency-responder-token')\n  16 |       localStorage.setItem('user-role', 'emergency_responder')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 16,
                            "line": 13
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n\n  11 |   test.beforeEach(async ({ page }) => {\n  12 |     // Setup emergency responder authentication\n> 13 |     await page.goto('/')\n     |                ^\n  14 |     await page.evaluate(() => {\n  15 |       localStorage.setItem('auth-token', 'mock-emergency-responder-token')\n  16 |       localStorage.setItem('user-role', 'emergency_responder')\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:13:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:43.134Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-51bf8-al-Chemical-Level-Emergency-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-51bf8-al-Chemical-Level-Emergency-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-51bf8-al-Chemical-Level-Emergency-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 16,
                        "line": 13
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-1c98b377a14435e205d7",
              "file": "emergency-response.spec.ts",
              "line": 102,
              "column": 3
            },
            {
              "title": "Multi-Pool Emergency Coordination",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 57,
                      "parallelIndex": 9,
                      "status": "failed",
                      "duration": 32318,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:13:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 16,
                          "line": 13
                        },
                        "snippet": "  11 |   test.beforeEach(async ({ page }) => {\n  12 |     // Setup emergency responder authentication\n> 13 |     await page.goto('/')\n     |                ^\n  14 |     await page.evaluate(() => {\n  15 |       localStorage.setItem('auth-token', 'mock-emergency-responder-token')\n  16 |       localStorage.setItem('user-role', 'emergency_responder')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 16,
                            "line": 13
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n\n  11 |   test.beforeEach(async ({ page }) => {\n  12 |     // Setup emergency responder authentication\n> 13 |     await page.goto('/')\n     |                ^\n  14 |     await page.evaluate(() => {\n  15 |       localStorage.setItem('auth-token', 'mock-emergency-responder-token')\n  16 |       localStorage.setItem('user-role', 'emergency_responder')\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:13:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:43.402Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-e07cd-Pool-Emergency-Coordination-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-e07cd-Pool-Emergency-Coordination-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-e07cd-Pool-Emergency-Coordination-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 16,
                        "line": 13
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-eada9077920624144654",
              "file": "emergency-response.spec.ts",
              "line": 156,
              "column": 3
            },
            {
              "title": "Emergency Communication Systems",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 58,
                      "parallelIndex": 11,
                      "status": "failed",
                      "duration": 31961,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:13:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 16,
                          "line": 13
                        },
                        "snippet": "  11 |   test.beforeEach(async ({ page }) => {\n  12 |     // Setup emergency responder authentication\n> 13 |     await page.goto('/')\n     |                ^\n  14 |     await page.evaluate(() => {\n  15 |       localStorage.setItem('auth-token', 'mock-emergency-responder-token')\n  16 |       localStorage.setItem('user-role', 'emergency_responder')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 16,
                            "line": 13
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n\n  11 |   test.beforeEach(async ({ page }) => {\n  12 |     // Setup emergency responder authentication\n> 13 |     await page.goto('/')\n     |                ^\n  14 |     await page.evaluate(() => {\n  15 |       localStorage.setItem('auth-token', 'mock-emergency-responder-token')\n  16 |       localStorage.setItem('user-role', 'emergency_responder')\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:13:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:43.829Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-356e4-gency-Communication-Systems-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-356e4-gency-Communication-Systems-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-356e4-gency-Communication-Systems-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 16,
                        "line": 13
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-e4e2b010c6a67b80c6d4",
              "file": "emergency-response.spec.ts",
              "line": 221,
              "column": 3
            },
            {
              "title": "Regulatory Compliance During Emergency",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 59,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 32795,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:13:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 16,
                          "line": 13
                        },
                        "snippet": "  11 |   test.beforeEach(async ({ page }) => {\n  12 |     // Setup emergency responder authentication\n> 13 |     await page.goto('/')\n     |                ^\n  14 |     await page.evaluate(() => {\n  15 |       localStorage.setItem('auth-token', 'mock-emergency-responder-token')\n  16 |       localStorage.setItem('user-role', 'emergency_responder')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 16,
                            "line": 13
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n\n  11 |   test.beforeEach(async ({ page }) => {\n  12 |     // Setup emergency responder authentication\n> 13 |     await page.goto('/')\n     |                ^\n  14 |     await page.evaluate(() => {\n  15 |       localStorage.setItem('auth-token', 'mock-emergency-responder-token')\n  16 |       localStorage.setItem('user-role', 'emergency_responder')\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:13:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:43.868Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-e9907-Compliance-During-Emergency-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-e9907-Compliance-During-Emergency-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-e9907-Compliance-During-Emergency-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 16,
                        "line": 13
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-4df686cb8f65dccdad7d",
              "file": "emergency-response.spec.ts",
              "line": 258,
              "column": 3
            },
            {
              "title": "Emergency Recovery and Reopening Protocol",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 60,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 32597,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:13:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 16,
                          "line": 13
                        },
                        "snippet": "  11 |   test.beforeEach(async ({ page }) => {\n  12 |     // Setup emergency responder authentication\n> 13 |     await page.goto('/')\n     |                ^\n  14 |     await page.evaluate(() => {\n  15 |       localStorage.setItem('auth-token', 'mock-emergency-responder-token')\n  16 |       localStorage.setItem('user-role', 'emergency_responder')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 16,
                            "line": 13
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/\", waiting until \"load\"\u001b[22m\n\n\n  11 |   test.beforeEach(async ({ page }) => {\n  12 |     // Setup emergency responder authentication\n> 13 |     await page.goto('/')\n     |                ^\n  14 |     await page.evaluate(() => {\n  15 |       localStorage.setItem('auth-token', 'mock-emergency-responder-token')\n  16 |       localStorage.setItem('user-role', 'emergency_responder')\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:13:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:44.000Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-32147-very-and-Reopening-Protocol-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-32147-very-and-Reopening-Protocol-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-32147-very-and-Reopening-Protocol-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 16,
                        "line": 13
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-a5761f9c78d77ce6e21b",
              "file": "emergency-response.spec.ts",
              "line": 305,
              "column": 3
            }
          ]
        },
        {
          "title": "Emergency Response Performance",
          "file": "emergency-response.spec.ts",
          "line": 378,
          "column": 6,
          "specs": [
            {
              "title": "Emergency response time benchmarks",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "emergency-response",
                  "projectName": "emergency-response",
                  "results": [
                    {
                      "workerIndex": 37,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 10453,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"emergency-incident-form\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"emergency-incident-form\"]') to be visible\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:384:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 16,
                          "line": 384
                        },
                        "snippet": "  382 |     // Measure emergency form load time\n  383 |     const startTime = Date.now()\n> 384 |     await page.waitForSelector('[data-testid=\"emergency-incident-form\"]')\n      |                ^\n  385 |     const loadTime = Date.now() - startTime\n  386 |     \n  387 |     // Emergency form must load within 1 second"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 16,
                            "line": 384
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"emergency-incident-form\"]') to be visible\u001b[22m\n\n\n  382 |     // Measure emergency form load time\n  383 |     const startTime = Date.now()\n> 384 |     await page.waitForSelector('[data-testid=\"emergency-incident-form\"]')\n      |                ^\n  385 |     const loadTime = Date.now() - startTime\n  386 |     \n  387 |     // Emergency form must load within 1 second\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:384:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:32.099Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-78386-cy-response-time-benchmarks-emergency-response/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-78386-cy-response-time-benchmarks-emergency-response/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-78386-cy-response-time-benchmarks-emergency-response/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 16,
                        "line": 384
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-45d48a632fcfc86a4388",
              "file": "emergency-response.spec.ts",
              "line": 379,
              "column": 3
            },
            {
              "title": "Emergency notification delivery performance",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "emergency-response",
                  "projectName": "emergency-response",
                  "results": [
                    {
                      "workerIndex": 38,
                      "parallelIndex": 10,
                      "status": "failed",
                      "duration": 10552,
                      "error": {
                        "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"mass-notification\"]')\u001b[22m\n",
                        "stack": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"mass-notification\"]')\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:406:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 16,
                          "line": 406
                        },
                        "snippet": "  404 |     const notificationStart = Date.now()\n  405 |     \n> 406 |     await page.click('[data-testid=\"mass-notification\"]')\n      |                ^\n  407 |     await page.fill('[data-testid=\"emergency-message\"]', 'Emergency test notification')\n  408 |     await page.check('[data-testid=\"notify-all-staff\"]')\n  409 |     await page.click('[data-testid=\"send-emergency-notification\"]')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 16,
                            "line": 406
                          },
                          "message": "TimeoutError: page.click: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"mass-notification\"]')\u001b[22m\n\n\n  404 |     const notificationStart = Date.now()\n  405 |     \n> 406 |     await page.click('[data-testid=\"mass-notification\"]')\n      |                ^\n  407 |     await page.fill('[data-testid=\"emergency-message\"]', 'Emergency test notification')\n  408 |     await page.check('[data-testid=\"notify-all-staff\"]')\n  409 |     await page.click('[data-testid=\"send-emergency-notification\"]')\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:406:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:32.320Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-12897-cation-delivery-performance-emergency-response/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-12897-cation-delivery-performance-emergency-response/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-12897-cation-delivery-performance-emergency-response/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 16,
                        "line": 406
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-855e43e4538d75fce25f",
              "file": "emergency-response.spec.ts",
              "line": 400,
              "column": 3
            },
            {
              "title": "Emergency response time benchmarks",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 61,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 32839,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/emergency/incident\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/emergency/incident\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:380:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 16,
                          "line": 380
                        },
                        "snippet": "  378 | test.describe('Emergency Response Performance', () => {\n  379 |   test('Emergency response time benchmarks', async ({ page }) => {\n> 380 |     await page.goto('/emergency/incident')\n      |                ^\n  381 |     \n  382 |     // Measure emergency form load time\n  383 |     const startTime = Date.now()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 16,
                            "line": 380
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/emergency/incident\", waiting until \"load\"\u001b[22m\n\n\n  378 | test.describe('Emergency Response Performance', () => {\n  379 |   test('Emergency response time benchmarks', async ({ page }) => {\n> 380 |     await page.goto('/emergency/incident')\n      |                ^\n  381 |     \n  382 |     // Measure emergency form load time\n  383 |     const startTime = Date.now()\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:380:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:44.042Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-78386-cy-response-time-benchmarks-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-78386-cy-response-time-benchmarks-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-78386-cy-response-time-benchmarks-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 16,
                        "line": 380
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-d565e6b17cc06e923065",
              "file": "emergency-response.spec.ts",
              "line": 379,
              "column": 3
            },
            {
              "title": "Emergency notification delivery performance",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox-critical",
                  "projectName": "firefox-critical",
                  "results": [
                    {
                      "workerIndex": 62,
                      "parallelIndex": 14,
                      "status": "failed",
                      "duration": 31564,
                      "error": {
                        "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/emergency/communication\", waiting until \"load\"\u001b[22m\n",
                        "stack": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/emergency/communication\", waiting until \"load\"\u001b[22m\n\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:401:16",
                        "location": {
                          "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                          "column": 16,
                          "line": 401
                        },
                        "snippet": "  399 |   \n  400 |   test('Emergency notification delivery performance', async ({ page }) => {\n> 401 |     await page.goto('/emergency/communication')\n      |                ^\n  402 |     \n  403 |     // Test notification system performance\n  404 |     const notificationStart = Date.now()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                            "column": 16,
                            "line": 401
                          },
                          "message": "TimeoutError: page.goto: Timeout 30000ms exceeded.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5080/emergency/communication\", waiting until \"load\"\u001b[22m\n\n\n  399 |   \n  400 |   test('Emergency notification delivery performance', async ({ page }) => {\n> 401 |     await page.goto('/emergency/communication')\n      |                ^\n  402 |     \n  403 |     // Test notification system performance\n  404 |     const notificationStart = Date.now()\n    at /home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts:401:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:44.273Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-12897-cation-delivery-performance-firefox-critical/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-12897-cation-delivery-performance-firefox-critical/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/emergency-response-Emergen-12897-cation-delivery-performance-firefox-critical/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sam/code/pool_maintainer/tests/e2e/emergency-response.spec.ts",
                        "column": 16,
                        "line": 401
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1eb1bc3de231383d7d58-a99e52ac52472b0acec5",
              "file": "emergency-response.spec.ts",
              "line": 400,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "accessibility.spec.ts",
      "file": "accessibility.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Accessibility Testing",
          "file": "accessibility.spec.ts",
          "line": 10,
          "column": 6,
          "specs": [
            {
              "title": "A11Y-001: Screen Reader Pool Status Navigation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 39,
                      "parallelIndex": 14,
                      "status": "failed",
                      "duration": 846,
                      "error": {
                        "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11",
                        "location": {
                          "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                          "column": 325883,
                          "line": 12
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                            "column": 325883,
                            "line": 12
                          },
                          "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:33.282Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-e30fa-ader-Pool-Status-Navigation-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-e30fa-ader-Pool-Status-Navigation-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-e30fa-ader-Pool-Status-Navigation-accessibility/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                        "column": 325883,
                        "line": 12
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-907adf9206c20a0c1be8",
              "file": "accessibility.spec.ts",
              "line": 40,
              "column": 3
            },
            {
              "title": "Chemical Test Form Accessibility",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 40,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 863,
                      "error": {
                        "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11",
                        "location": {
                          "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                          "column": 325883,
                          "line": 12
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                            "column": 325883,
                            "line": 12
                          },
                          "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:33.308Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-c0aec-cal-Test-Form-Accessibility-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-c0aec-cal-Test-Form-Accessibility-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-c0aec-cal-Test-Form-Accessibility-accessibility/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                        "column": 325883,
                        "line": 12
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-04e82dd19be6c907c566",
              "file": "accessibility.spec.ts",
              "line": 93,
              "column": 3
            },
            {
              "title": "Alert and Notification Accessibility",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 41,
                      "parallelIndex": 14,
                      "status": "failed",
                      "duration": 865,
                      "error": {
                        "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11",
                        "location": {
                          "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                          "column": 325883,
                          "line": 12
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                            "column": 325883,
                            "line": 12
                          },
                          "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:35.412Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-9ca12--Notification-Accessibility-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-9ca12--Notification-Accessibility-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-9ca12--Notification-Accessibility-accessibility/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                        "column": 325883,
                        "line": 12
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-9c4d8596591850e18b67",
              "file": "accessibility.spec.ts",
              "line": 151,
              "column": 3
            },
            {
              "title": "Data Table Accessibility",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 42,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 900,
                      "error": {
                        "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11",
                        "location": {
                          "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                          "column": 325883,
                          "line": 12
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                            "column": 325883,
                            "line": 12
                          },
                          "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:35.378Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibility-Testing-Data-Table-Accessibility-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibility-Testing-Data-Table-Accessibility-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibility-Testing-Data-Table-Accessibility-accessibility/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                        "column": 325883,
                        "line": 12
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-5fdc02e9152cc310f221",
              "file": "accessibility.spec.ts",
              "line": 201,
              "column": 3
            },
            {
              "title": "Chart and Graph Accessibility",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 43,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 842,
                      "error": {
                        "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11",
                        "location": {
                          "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                          "column": 325883,
                          "line": 12
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                            "column": 325883,
                            "line": 12
                          },
                          "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:37.504Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-65533-art-and-Graph-Accessibility-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-65533-art-and-Graph-Accessibility-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-65533-art-and-Graph-Accessibility-accessibility/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                        "column": 325883,
                        "line": 12
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-804fb310da522c7f1255",
              "file": "accessibility.spec.ts",
              "line": 252,
              "column": 3
            },
            {
              "title": "Mobile Accessibility",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 44,
                      "parallelIndex": 14,
                      "status": "failed",
                      "duration": 862,
                      "error": {
                        "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11",
                        "location": {
                          "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                          "column": 325883,
                          "line": 12
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                            "column": 325883,
                            "line": 12
                          },
                          "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:37.518Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibility-Testing-Mobile-Accessibility-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibility-Testing-Mobile-Accessibility-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibility-Testing-Mobile-Accessibility-accessibility/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                        "column": 325883,
                        "line": 12
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-12e71f5c72c333a6f926",
              "file": "accessibility.spec.ts",
              "line": 282,
              "column": 3
            },
            {
              "title": "High Contrast and Color Accessibility",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 45,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 814,
                      "error": {
                        "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11",
                        "location": {
                          "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                          "column": 325883,
                          "line": 12
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                            "column": 325883,
                            "line": 12
                          },
                          "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:39.483Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-4c2ed-ast-and-Color-Accessibility-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-4c2ed-ast-and-Color-Accessibility-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-4c2ed-ast-and-Color-Accessibility-accessibility/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                        "column": 325883,
                        "line": 12
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-8ab98bd80cf98c21b028",
              "file": "accessibility.spec.ts",
              "line": 329,
              "column": 3
            },
            {
              "title": "Focus Management and Keyboard Navigation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 46,
                      "parallelIndex": 14,
                      "status": "failed",
                      "duration": 889,
                      "error": {
                        "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11",
                        "location": {
                          "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                          "column": 325883,
                          "line": 12
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                            "column": 325883,
                            "line": 12
                          },
                          "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:39.548Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-558fc-ent-and-Keyboard-Navigation-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-558fc-ent-and-Keyboard-Navigation-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-558fc-ent-and-Keyboard-Navigation-accessibility/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                        "column": 325883,
                        "line": 12
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-497311370ceed80ba0dc",
              "file": "accessibility.spec.ts",
              "line": 374,
              "column": 3
            },
            {
              "title": "Screen Reader Announcements",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 47,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 916,
                      "error": {
                        "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11",
                        "location": {
                          "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                          "column": 325883,
                          "line": 12
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                            "column": 325883,
                            "line": 12
                          },
                          "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:41.458Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-14080-Screen-Reader-Announcements-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-14080-Screen-Reader-Announcements-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-14080-Screen-Reader-Announcements-accessibility/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                        "column": 325883,
                        "line": 12
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-ba63489c58ad04f9ea09",
              "file": "accessibility.spec.ts",
              "line": 417,
              "column": 3
            },
            {
              "title": "Alternative Text and Media Accessibility",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 48,
                      "parallelIndex": 11,
                      "status": "failed",
                      "duration": 846,
                      "error": {
                        "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)",
                        "stack": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11",
                        "location": {
                          "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                          "column": 325883,
                          "line": 12
                        }
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                            "column": 325883,
                            "line": 12
                          },
                          "message": "Error: page.evaluate: TypeError: Rules property must be an array\n    at Object.zf [as configure] (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at Object.zf (eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>:12:325883)\n    at eval (eval at evaluate (:291:30), <anonymous>:1:31)\n    at UtilityScript.evaluate (<anonymous>:293:16)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:64:16\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:31:71\n    at __awaiter (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:27:12)\n    at configureAxe (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:63:45)\n    at /home/sam/code/pool_maintainer/tests/e2e/accessibility.spec.ts:17:11"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:41.515Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-287ff-ext-and-Media-Accessibility-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-287ff-ext-and-Media-Accessibility-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-Accessibilit-287ff-ext-and-Media-Accessibility-accessibility/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "eval at <anonymous> (eval at evaluate (:291:30)), <anonymous>",
                        "column": 325883,
                        "line": 12
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-97153bddabd0028fb2c6",
              "file": "accessibility.spec.ts",
              "line": 451,
              "column": 3
            }
          ]
        },
        {
          "title": "WCAG Compliance Verification",
          "file": "accessibility.spec.ts",
          "line": 489,
          "column": 6,
          "specs": [
            {
              "title": "WCAG 2.1 AA compliance - /overview",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 49,
                      "parallelIndex": 14,
                      "status": "failed",
                      "duration": 1190,
                      "error": {
                        "message": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n",
                        "stack": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n\n    at testResultDependsOnViolations (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/utils.js:16:26)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:143:51\n    at fulfilled (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:28:58)"
                      },
                      "errors": [
                        {
                          "message": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n\n    at testResultDependsOnViolations (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/utils.js:16:26)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:143:51\n    at fulfilled (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:28:58)"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "┌─────────┬──────────┬────────────┬─────────────────────────────────────────────────────┬───────┐\n│ (index) │ id       │ impact     │ description                                         │ nodes │\n├─────────┼──────────┼────────────┼─────────────────────────────────────────────────────┼───────┤\n│ 0       │ \u001b[32m'region'\u001b[39m │ \u001b[32m'moderate'\u001b[39m │ \u001b[32m'Ensure all page content is contained by landmarks'\u001b[39m │ \u001b[33m1\u001b[39m     │\n└─────────┴──────────┴────────────┴─────────────────────────────────────────────────────┴───────┘\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:41.596Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-b6a74--1-AA-compliance---overview-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-b6a74--1-AA-compliance---overview-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-b6a74--1-AA-compliance---overview-accessibility/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-2c48f3484262ae5586a1",
              "file": "accessibility.spec.ts",
              "line": 499,
              "column": 5
            },
            {
              "title": "WCAG 2.1 AA compliance - /pool-facilities",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 50,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1114,
                      "error": {
                        "message": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n",
                        "stack": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n\n    at testResultDependsOnViolations (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/utils.js:16:26)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:143:51\n    at fulfilled (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:28:58)"
                      },
                      "errors": [
                        {
                          "message": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n\n    at testResultDependsOnViolations (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/utils.js:16:26)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:143:51\n    at fulfilled (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:28:58)"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "┌─────────┬──────────┬────────────┬─────────────────────────────────────────────────────┬───────┐\n│ (index) │ id       │ impact     │ description                                         │ nodes │\n├─────────┼──────────┼────────────┼─────────────────────────────────────────────────────┼───────┤\n│ 0       │ \u001b[32m'region'\u001b[39m │ \u001b[32m'moderate'\u001b[39m │ \u001b[32m'Ensure all page content is contained by landmarks'\u001b[39m │ \u001b[33m1\u001b[39m     │\n└─────────┴──────────┴────────────┴─────────────────────────────────────────────────────┴───────┘\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:42.262Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-ce3a2-ompliance---pool-facilities-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-ce3a2-ompliance---pool-facilities-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-ce3a2-ompliance---pool-facilities-accessibility/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-946b7fba6194f0027b47",
              "file": "accessibility.spec.ts",
              "line": 499,
              "column": 5
            },
            {
              "title": "WCAG 2.1 AA compliance - /trends",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 51,
                      "parallelIndex": 12,
                      "status": "failed",
                      "duration": 1078,
                      "error": {
                        "message": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n",
                        "stack": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n\n    at testResultDependsOnViolations (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/utils.js:16:26)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:143:51\n    at fulfilled (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:28:58)"
                      },
                      "errors": [
                        {
                          "message": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n\n    at testResultDependsOnViolations (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/utils.js:16:26)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:143:51\n    at fulfilled (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:28:58)"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "┌─────────┬──────────┬────────────┬─────────────────────────────────────────────────────┬───────┐\n│ (index) │ id       │ impact     │ description                                         │ nodes │\n├─────────┼──────────┼────────────┼─────────────────────────────────────────────────────┼───────┤\n│ 0       │ \u001b[32m'region'\u001b[39m │ \u001b[32m'moderate'\u001b[39m │ \u001b[32m'Ensure all page content is contained by landmarks'\u001b[39m │ \u001b[33m1\u001b[39m     │\n└─────────┴──────────┴────────────┴─────────────────────────────────────────────────────┴───────┘\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:42.651Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-bd995--2-1-AA-compliance---trends-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-bd995--2-1-AA-compliance---trends-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-bd995--2-1-AA-compliance---trends-accessibility/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-0160dbb9e428feec136e",
              "file": "accessibility.spec.ts",
              "line": 499,
              "column": 5
            },
            {
              "title": "WCAG 2.1 AA compliance - /alerts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 52,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1054,
                      "error": {
                        "message": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n",
                        "stack": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n\n    at testResultDependsOnViolations (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/utils.js:16:26)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:143:51\n    at fulfilled (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:28:58)"
                      },
                      "errors": [
                        {
                          "message": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n\n    at testResultDependsOnViolations (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/utils.js:16:26)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:143:51\n    at fulfilled (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:28:58)"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "┌─────────┬──────────┬────────────┬─────────────────────────────────────────────────────┬───────┐\n│ (index) │ id       │ impact     │ description                                         │ nodes │\n├─────────┼──────────┼────────────┼─────────────────────────────────────────────────────┼───────┤\n│ 0       │ \u001b[32m'region'\u001b[39m │ \u001b[32m'moderate'\u001b[39m │ \u001b[32m'Ensure all page content is contained by landmarks'\u001b[39m │ \u001b[33m1\u001b[39m     │\n└─────────┴──────────┴────────────┴─────────────────────────────────────────────────────┴───────┘\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:42.566Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-9cd92--2-1-AA-compliance---alerts-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-9cd92--2-1-AA-compliance---alerts-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-9cd92--2-1-AA-compliance---alerts-accessibility/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-96cbbf8b3610f2f55f7f",
              "file": "accessibility.spec.ts",
              "line": 499,
              "column": 5
            },
            {
              "title": "WCAG 2.1 AA compliance - /mobile/test-entry",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 53,
                      "parallelIndex": 8,
                      "status": "failed",
                      "duration": 1102,
                      "error": {
                        "message": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n",
                        "stack": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n\n    at testResultDependsOnViolations (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/utils.js:16:26)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:143:51\n    at fulfilled (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:28:58)"
                      },
                      "errors": [
                        {
                          "message": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n\n    at testResultDependsOnViolations (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/utils.js:16:26)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:143:51\n    at fulfilled (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:28:58)"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "┌─────────┬──────────┬────────────┬─────────────────────────────────────────────────────┬───────┐\n│ (index) │ id       │ impact     │ description                                         │ nodes │\n├─────────┼──────────┼────────────┼─────────────────────────────────────────────────────┼───────┤\n│ 0       │ \u001b[32m'region'\u001b[39m │ \u001b[32m'moderate'\u001b[39m │ \u001b[32m'Ensure all page content is contained by landmarks'\u001b[39m │ \u001b[33m1\u001b[39m     │\n└─────────┴──────────┴────────────┴─────────────────────────────────────────────────────┴───────┘\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:42.635Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-c3d12-pliance---mobile-test-entry-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-c3d12-pliance---mobile-test-entry-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-c3d12-pliance---mobile-test-entry-accessibility/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-f7404f0d1729cbaa3ddf",
              "file": "accessibility.spec.ts",
              "line": 499,
              "column": 5
            },
            {
              "title": "Color contrast compliance across themes",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "accessibility",
                  "projectName": "accessibility",
                  "results": [
                    {
                      "workerIndex": 54,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 970,
                      "error": {
                        "message": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n",
                        "stack": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n\n    at testResultDependsOnViolations (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/utils.js:16:26)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:143:51\n    at fulfilled (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:28:58)"
                      },
                      "errors": [
                        {
                          "message": "AssertionError: 1 accessibility violation was detected\n\n1 !== 0\n\n    at testResultDependsOnViolations (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/utils.js:16:26)\n    at /home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:143:51\n    at fulfilled (/home/sam/code/pool_maintainer/node_modules/axe-playwright/dist/index.js:28:58)"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "┌─────────┬──────────┬────────────┬─────────────────────────────────────────────────────┬───────┐\n│ (index) │ id       │ impact     │ description                                         │ nodes │\n├─────────┼──────────┼────────────┼─────────────────────────────────────────────────────┼───────┤\n│ 0       │ \u001b[32m'region'\u001b[39m │ \u001b[32m'moderate'\u001b[39m │ \u001b[32m'Ensure all page content is contained by landmarks'\u001b[39m │ \u001b[33m1\u001b[39m     │\n└─────────┴──────────┴────────────┴─────────────────────────────────────────────────────┴───────┘\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-02T16:20:42.874Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-06be3-st-compliance-across-themes-accessibility/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-06be3-st-compliance-across-themes-accessibility/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/sam/code/pool_maintainer/test-results/accessibility-WCAG-Complia-06be3-st-compliance-across-themes-accessibility/error-context.md"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-65d766b7ce6eeac0b687",
              "file": "accessibility.spec.ts",
              "line": 512,
              "column": 3
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-08-02T16:20:14.034Z",
    "duration": 99311.427,
    "expected": 0,
    "skipped": 0,
    "unexpected": 97,
    "flaky": 0
  }
}